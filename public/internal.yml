openapi: 3.1.0
info:
    license:
        name: Apache-2.0
        url: http://www.apache.org/licenses/LICENSE-2.0
    title: Cycle Internal API
    description: Inside every container running on Cycle, there is a Unix socket mounted at /var/run/cycle/api/api.sock. You can send HTTP requests over this socket to access information about the local environment, access secrets, and much more. The way this internal API functions is very similar to how Cycle's main API works, though the purpose is different. The internal API is primarily used by instances to learn about their environment, and dynamically update as deployments change. In the future, we expect you'll be able to use the internal API to register service containers and much more. The internal API returns identical JSON responses to the main API. There is also a websocket based API that you can tune into for streaming platform updates.
    version: 1.0.0
    contact:
        email: support@cycle.io
    x-logo:
        url: https://static.cycle.io/icons/logo/logo-white.svg
servers:
    - description: Cycle Internal API
      url: http://localhost
      x-unix-socket:
          description: Unix socket path for internal API
          url: /var/run/cycle/api/api.sock
security:
    - tokenAuth: []
paths:
    /v1/environment:
        get:
            operationId: getEnvironment
            summary: Get Environment
            description: |
                Gets the Environment that this instance is a part of.
            tags:
                - Environments
            parameters: []
            responses:
                "200":
                    description: Returns an Environment.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - data
                                properties:
                                    data:
                                        $ref: "#/components/schemas/Environment"
                default:
                    $ref: "#/components/responses/DefaultError"
    /v1/environment/containers:
        get:
            operationId: getEnvironmentContainers
            summary: List Environment Containers
            description: Lists all Containers that are part of the same Environment as this Instance.
            tags:
                - Environments
                - Containers
            parameters: []
            responses:
                "200":
                    description: Returns a collection of container resources.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - data
                                properties:
                                    data:
                                        type: array
                                        items:
                                            $ref: "#/components/schemas/Container"
                default:
                    $ref: "#/components/responses/DefaultError"
    /v1/environment/instances:
        get:
            operationId: getEnvironmentInstances
            summary: List Environment Instances
            description: Lists all Instances present in this Instance's Environment.
            tags:
                - Environments
                - Instances
            parameters: []
            responses:
                "200":
                    description: Returns a list of Instances.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - data
                                properties:
                                    data:
                                        type: array
                                        items:
                                            $ref: "#/components/schemas/Instance"
                default:
                    $ref: "#/components/responses/DefaultError"
    /v1/environment/ips:
        get:
            operationId: getEnvironmentIPs
            summary: List Environment IPs
            description: Lists the IPs associated with this Instance's Environment.
            tags:
                - Environments
            parameters: []
            responses:
                "200":
                    description: Returns a list of detailed IP objects.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - data
                                properties:
                                    data:
                                        type: array
                                        items:
                                            $ref: "#/components/schemas/Ip"
                default:
                    $ref: "#/components/responses/DefaultError"
    /v1/environment/services:
        get:
            operationId: getEnvironmentServices
            summary: List Environment Services
            description: Lists the services containers/instances that are in the same environment as this instance.
            tags:
                - Environments
            parameters: []
            responses:
                "200":
                    description: Returns a list of environment services (a combination of container and instance details).
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - data
                                properties:
                                    data:
                                        type: object
                                        properties:
                                            discovery:
                                                $ref: "#/components/schemas/ServiceContainer"
                                            vpn:
                                                $ref: "#/components/schemas/ServiceContainer"
                                            loadbalancer:
                                                $ref: "#/components/schemas/ServiceContainer"
                                            scheduler:
                                                $ref: "#/components/schemas/ServiceContainer"
                                        additionalProperties:
                                            $ref: "#/components/schemas/ServiceContainer"
                default:
                    $ref: "#/components/responses/DefaultError"
    /v1/environment/services/lb/telemetry/snapshots:
        post:
            operationId: submitLoadBalancerTelemetry
            summary: Submit Environment Load Balancer Telemetry
            description: Submit load balancer telemetry data.
            tags:
                - Environments
            parameters: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            additionalProperties:
                                $ref: "#/components/schemas/LoadBalancerTelemetrySnapshot"
            responses:
                "200":
                    description: Returns a list of Instances.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - data
                                properties:
                                    data:
                                        type: boolean
                default:
                    $ref: "#/components/responses/DefaultError"
    /v1/environment/scoped-variables:
        get:
            operationId: getEnvironmentScopedVariables
            summary: Get Environment Scoped Variables
            description: |
                Gets the scoped variables that are accessible to this instance via internal API.
            tags:
                - Environments
                - Scoped Variables
            parameters: []
            responses:
                "200":
                    description: Returns a map of variable values, keyed by their identifier.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - data
                                properties:
                                    data:
                                        type: object
                                        additionalProperties:
                                            type: string
                default:
                    $ref: "#/components/responses/DefaultError"
    /v1/hub:
        get:
            operationId: getHub
            summary: Get Hub
            description: Gets the hub that this instance is a member of.
            tags:
                - Hubs
            parameters: []
            responses:
                "200":
                    description: Returns a hub.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - data
                                properties:
                                    data:
                                        $ref: "#/components/schemas/PublicHub"
                default:
                    $ref: "#/components/responses/DefaultError"
    /v1/hub/integrations:
        get:
            operationId: getHubIntegration
            summary: Get Hub Integration
            description: |
                Gets an integration based on a provided identifier or vendor query parameter. At least one of these must be provided.
            tags:
                - Hubs
            parameters:
                - name: identifier
                  in: query
                  required: false
                  description: An integration identifier.
                  schema:
                      type: string
                - name: vendor
                  in: query
                  required: false
                  description: An integration vendor.
                  schema:
                      type: string
            responses:
                "200":
                    description: Returns a hub integration.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - data
                                properties:
                                    data:
                                        $ref: "#/components/schemas/Integration"
                default:
                    $ref: "#/components/responses/DefaultError"
    /v1/server:
        get:
            operationId: getServer
            tags:
                - Servers
            parameters: []
            summary: Get Server
            description: Gets the server this instance is running on.
            responses:
                "200":
                    description: Returns a server.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - data
                                properties:
                                    data:
                                        $ref: "#/components/schemas/Server"
                default:
                    $ref: "#/components/responses/DefaultError"
    /v1/server/instances:
        get:
            operationId: getServerInstances
            summary: Get Server Instances
            description: Gets a list of instances that are on the same server as this instance.
            tags:
                - Servers
                - Instances
            parameters: []
            responses:
                "200":
                    description: Returns a list of instances.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - data
                                properties:
                                    data:
                                        type: array
                                        items:
                                            $ref: "#/components/schemas/Instance"
                default:
                    $ref: "#/components/responses/DefaultError"
    /v1/server/instances/telemetry:
        get:
            operationId: getServerInstancesTelemetry
            summary: Get Server Instances Telemetry
            description: Gets resource telemetry for this instance.
            tags:
                - Servers
                - Instances
            parameters: []
            responses:
                "200":
                    description: Returns a list of resource telemetry snapshots.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - data
                                properties:
                                    data:
                                        type: array
                                        items:
                                            type: object
                                            required:
                                                - instance_id
                                                - container_id
                                                - environment_id
                                                - stats
                                            properties:
                                                instance_id:
                                                    $ref: "#/components/schemas/ID"
                                                container_id:
                                                    $ref: "#/components/schemas/ID"
                                                environment_id:
                                                    $ref: "#/components/schemas/ID"
                                                stats:
                                                    $ref: "#/components/schemas/ResourceSnapshot"
                default:
                    $ref: "#/components/responses/DefaultError"
    /v1/server/containers:
        get:
            operationId: getServerContainers
            tags:
                - Servers
                - Containers
            parameters: []
            summary: List Server Containers
            description: Lists all containers present on the same server as this instance.
            responses:
                "200":
                    description: Returns a list of containers.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - data
                                properties:
                                    data:
                                        type: array
                                        items:
                                            $ref: "#/components/schemas/Container"
                default:
                    $ref: "#/components/responses/DefaultError"
    /v1/server/images:
        get:
            operationId: getServerImages
            summary: List Server Images
            description: Lists all images downloaded onto the server this instance is on.
            tags:
                - Servers
                - Containers
            parameters: []
            responses:
                "200":
                    description: Returns a list of image details (id, time accessed).
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - data
                                properties:
                                    data:
                                        type: array
                                        items:
                                            type: object
                                            required:
                                                - id
                                                - access_time
                                            properties:
                                                id:
                                                    $ref: "#/components/schemas/ID"
                                                access_time:
                                                    $ref: "#/components/schemas/DateTime"
                default:
                    $ref: "#/components/responses/DefaultError"
    /v1/server/images/download:
        post:
            operationId: downloadImage
            summary: Download Image
            description: Downloads the specified image to the server.
            tags:
                - Servers
                - Images
            parameters: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - image_id
                            properties:
                                image_id:
                                    $ref: "#/components/schemas/ID"
            responses:
                "200":
                    description: Returns the details of the downloaded image.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - data
                                properties:
                                    data:
                                        type: array
                                        items:
                                            type: object
                                            required:
                                                - id
                                                - access_time
                                            properties:
                                                id:
                                                    $ref: "#/components/schemas/ID"
                                                access_time:
                                                    $ref: "#/components/schemas/DateTime"
                default:
                    $ref: "#/components/responses/DefaultError"
    /v1/container:
        get:
            operationId: getContainer
            summary: Get Container
            description: Gets a container. By default will grab the container of this instance, but a `container-id`` parameter can be passed to grab any other container in the same environment.
            tags:
                - Containers
            parameters:
                - name: container-id
                  in: query
                  required: false
                  description: Specify which container to fetch. If not provided, will use the container of the current instance.
                  schema:
                      type: string
            responses:
                "200":
                    description: Returns a container.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - data
                                properties:
                                    data:
                                        $ref: "#/components/schemas/Container"
                default:
                    $ref: "#/components/responses/DefaultError"
    /v1/container/instances:
        get:
            operationId: getContainerInstances
            summary: Get Container Instances
            description: Gets the instances of a container. By default will grab the instances of the same container, but a `container-id`` parameter can be passed to grab any other container instances in the same environment.
            tags:
                - Containers
                - Instances
            parameters:
                - name: container-id
                  in: query
                  required: false
                  description: Specify which container to fetch instances of. If not provided, will use the container of the current instance.
                  schema:
                      type: string
            responses:
                "200":
                    description: Returns a list of instances.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - data
                                properties:
                                    data:
                                        type: array
                                        items:
                                            $ref: "#/components/schemas/Instance"
                default:
                    $ref: "#/components/responses/DefaultError"
    /v1/containers/certificates:
        get:
            operationId: getContainerCertificates
            summary: List Container Certificates
            description: Get the TLS certificates associated with the domains pointed at this container.
            tags:
                - Containers
            parameters:
                - name: container-id
                  in: query
                  required: false
                  description: Specify which container to get certificates for. If not provided, will use the container of the current instance.
                  schema:
                      type: string
            responses:
                "200":
                    description: Returns a list of TLS certificates.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - data
                                properties:
                                    data:
                                        type: array
                                        items:
                                            $ref: "#/components/schemas/Certificate"
                default:
                    $ref: "#/components/responses/DefaultError"
    /v1/containers/domains:
        get:
            operationId: getContainerDomains
            summary: List Container Domains
            description: Get the domains pointed at a container.
            tags:
                - Containers
            parameters:
                - name: container-id
                  in: query
                  required: false
                  description: Specify which container to get domains for. If not provided, will use the container of the current instance.
                  schema:
                      type: string
            responses:
                "200":
                    description: Returns a list of domains.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - data
                                properties:
                                    data:
                                        type: array
                                        items:
                                            type: object
                                            description: Any associated Linked Records for this container, and their fully-qualified domain name (fqdn).
                                            required:
                                                - fqdn
                                            properties:
                                                fqdn:
                                                    type: string
                                                    description: The fully qualified domain name.
                                                record:
                                                    $ref: "#/components/schemas/Record"
                default:
                    $ref: "#/components/responses/DefaultError"
    /v1/conductor/tasks:
        post:
            operationId: createInstanceJob
            summary: Create Instance Job
            description: |
                Used to perform different actions on a given instance.
            tags:
                - Containers
                - Instances
            parameters: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            discriminator:
                                propertyName: action
                                mapping:
                                    container.instance.start: "#/components/schemas/StartInstanceTask"
                                    container.instance.stop: "#/components/schemas/StopInstanceTask"
                            oneOf:
                                - $ref: "#/components/schemas/StartInstanceTask"
                                - $ref: "#/components/schemas/StopInstanceTask"
            responses:
                "200":
                    description: Returns nothing on success.
                    content:
                        application/json:
                            schema:
                                type: object
                                additionalProperties: false
                default:
                    $ref: "#/components/responses/DefaultError"
    /v1/monitoring/metrics:
        post:
            operationId: postMetric
            summary: Post Metric
            description: |
                Post data to Cycle's monitoring system.
            tags:
                - Monitoring
            parameters: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                $ref: "#/components/schemas/Metric"
            responses:
                "200":
                    description: Returns true on success
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - data
                                properties:
                                    data:
                                        type: boolean
                                        enum:
                                            - true
                default:
                    $ref: "#/components/responses/DefaultError"
    /v1/vpn/login:
        post:
            operationId: validateVPNLogin
            summary: Validate VPN Login
            description: |
                Validates a username/password pair for logging into the VPN service of the environment of this instance.
                You must pass a basic Authorization header with the desired username/password combination to validate.
            tags:
                - Environments
                - VPN
            security:
                - tokenAuth: []
                - basicAuth: []
            parameters: []
            responses:
                "200":
                    description: Returns true on success
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - data
                                properties:
                                    data:
                                        type: boolean
                                        enum:
                                            - true
                "403":
                    description: Returns false on verification failure
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - data
                                properties:
                                    data:
                                        type: boolean
                                        enum:
                                            - false
                default:
                    $ref: "#/components/responses/DefaultError"
    /v1/sdn/networks:
        get:
            operationId: getNetworks
            summary: List Networks
            description: Lists all networks attached to this instance.
            tags:
                - SDN
            parameters: []
            responses:
                "200":
                    description: Returns a list of networks.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - data
                                properties:
                                    data:
                                        type: array
                                        items:
                                            $ref: "#/components/schemas/Network"
                default:
                    $ref: "#/components/responses/DefaultError"
    /v1/sdn/networks/instances:
        get:
            operationId: getNetworkInstances
            summary: List Network Instances
            description: Lists all instances present in this instance's SDN networks.
            tags:
                - SDN
                - Instances
            parameters: []
            responses:
                "200":
                    description: Returns a list of instances.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - data
                                properties:
                                    data:
                                        type: array
                                        items:
                                            $ref: "#/components/schemas/Instance"
                default:
                    $ref: "#/components/responses/DefaultError"
    /v1/sdn/networks/environments:
        get:
            operationId: getNetworkEnvironments
            summary: List Network Environments
            description: Lists all environments present in this instance's SDN networks.
            tags:
                - SDN
                - Environments
            parameters: []
            responses:
                "200":
                    description: Returns a list of environments.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - data
                                properties:
                                    data:
                                        type: array
                                        items:
                                            $ref: "#/components/schemas/Environment"
                default:
                    $ref: "#/components/responses/DefaultError"
components:
    securitySchemes:
        tokenAuth:
            name: X-CYCLE-TOKEN
            in: header
            type: apiKey
            description: The authentication header for every request on the internal API. Take the value of the CYCLE_API_TOKEN environment variable present in the instance, and pass it as the value to this header to authenticate.
        basicAuth:
            type: http
            scheme: basic
    schemas:
        Capability:
            type: string
            description: A capability that a user or API key that represents what an API key or a user can do.
            enum:
                - api-keys-manage
                - apionly-jobs-view
                - apionly-notifications-listen
                - autoscale-groups-manage
                - autoscale-groups-view
                - billing-credits-view
                - billing-invoices-pay
                - billing-invoices-view
                - billing-methods-manage
                - billing-services-manage
                - billing-services-view
                - containers-backups-manage
                - containers-backups-view
                - containers-console
                - containers-deploy
                - containers-instances-migrate
                - containers-lock
                - containers-ssh
                - containers-manage
                - containers-view
                - containers-functions-trigger
                - containers-volumes-manage
                - containers-volumes-view
                - dns-certs-view
                - dns-manage
                - dns-view
                - environments-deployments-manage
                - environments-manage
                - environments-scopedvariables-manage
                - environments-scopedvariables-view
                - environments-services-manage
                - environments-view
                - environments-vpn
                - environments-vpn-manage
                - hubs-delete
                - hubs-integrations-manage
                - hubs-integrations-view
                - hubs-invites-manage
                - hubs-invites-send
                - hubs-members-manage
                - hubs-members-view
                - hubs-roles-manage
                - hubs-roles-view
                - hubs-usage-view
                - hubs-update
                - hubs-auditlog-view
                - images-manage
                - images-sources-manage
                - images-sources-view
                - images-view
                - ips-manage
                - servers-console
                - servers-decommission
                - servers-login
                - clusters-manage
                - clusters-view
                - servers-provision
                - servers-manage
                - servers-view
                - monitor-manage
                - monitor-view
                - pipelines-manage
                - pipelines-trigger
                - pipelines-view
                - sdn-networks-manage
                - sdn-networks-view
                - security-manage
                - security-view
                - stacks-builds-deploy
                - stacks-builds-manage
                - stacks-manage
                - stacks-view
                - virtual-machines-view
                - virtual-machines-manage
                - virtual-machines-deploy
                - virtual-machines-console
                - virtual-machines-lock
                - virtual-machines-ssh-keys-manage
        Error:
            title: Error
            description: |-
                The Cycle API uses standard HTTP response codes to indicate the success or failure of an API request. Codes in the `2xx` range indicate success. Codes in the `4xx` range indicate a request that failed due to input, and codes in the `5xx` range indicate an error on Cycle's part (rare).
                There are two types of error response objects. Errors with authentication are formatted to follow the OAuth spec, while all other errors follow the same convention. If you're using one of our API Libraries, they will standardize OAuth errors to fit the general convention.
            type: object
            required:
                - status, code, title
            properties:
                status:
                    type: integer
                    description: The HTTP response code.
                    enum:
                        - 400
                        - 401
                        - 403
                        - 404
                        - 409
                        - 415
                        - 422
                        - 500
                        - 501
                        - 502
                        - 503
                        - 504
                code:
                    type: string
                    description: A Cycle standard error code.
                    enum:
                        - 400.invalid-syntax
                        - 401.auth-invalid
                        - 401.auth-expired
                        - 401.no-cookie
                        - 401.unauthorized-application
                        - 403.mismatch
                        - 403.wrong-hub
                        - 403.not-ready
                        - 403.expired
                        - 403.restricted-portal
                        - 403.permissions
                        - 403.invalid-ip
                        - 403.invalid-state
                        - 403.not-approved
                        - 403.not-allowed
                        - 403.platform-disabled
                        - 403.2fa-required
                        - 403.2fa-failed
                        - 403.new-application-capabilities
                        - 403.tier-restricted
                        - 404.hub
                        - 404.hub.invitation
                        - 404.hub.integration
                        - 404.hub.role
                        - 404.sdn.network
                        - 404.environment
                        - 404.environment.scoped-variable
                        - 404.hub.api-key
                        - 404.uri
                        - 404.provider
                        - 404.stack
                        - 404.community.thread
                        - 404.community.thread.reply
                        - 404.survey
                        - 404.survey-response
                        - 404.notification
                        - 404.stack-build
                        - 404.image
                        - 404.image.source
                        - 404.image.build-log
                        - 404.job
                        - 404.billing.order
                        - 404.billing.service
                        - 404.billing.credit
                        - 404.billing.invoice
                        - 404.billing.tier
                        - 404.billing.support
                        - 404.billing.payment-method
                        - 404.billing.promo-code
                        - 404.node
                        - 404.infrastructure.location
                        - 404.infrastructure.ips.pool
                        - 404.infrastructure.provider
                        - 404.infrastructure.server
                        - 404.infrastructure.cluster
                        - 404.infrastructure.autoscale.group
                        - 404.infrastructure.model
                        - 404.monitoring.logs.analytics.rule
                        - 404.account
                        - 404.container
                        - 404.container.backup
                        - 404.vpn.account
                        - 404.instance
                        - 404.pipeline
                        - 404.pipeline.run
                        - 404.pipeline.key
                        - 404.dns.zone
                        - 404.dns.record
                        - 404.cluster
                        - 404.platform-build
                        - 404.cycleos-build
                        - 404.email-verification
                        - 404.hub.membership
                        - 404.announcement
                        - 404.ha-service.session
                        - 404.virtual-machine
                        - 404.virtual-machine.ssh-key
                        - 404.sales.lead
                        - 404.stack.build-log
                        - 409.duplicate-found
                        - 415.invalid-content-type
                        - 422.missing-argument
                        - 422.invalid-argument
                        - 422.invalid-input
                        - 422.max-exceeded
                        - 422.not-compatible
                        - 422.already-exists
                        - 429.rate-limiting
                        - 500.database
                        - 500.database-insert
                        - 500.database-update
                        - 500.database-remove
                        - 500.jobd
                        - 500.unknown
                        - 500.dev
                        - 500.email
                        - 503.not-ready
                        - 503.not-enabled
                        - 503.dependency-not-enabled
                        - 504.not-available
                title:
                    type: string
                    description: The main text describing the error.
                detail:
                    type: string
                    description: A more detailed description of the error.
                source:
                    type: string
                    description: A [JSON pointer](https://tools.ietf.org/html/rfc6901/) describing the source of an error.
                extra:
                    type: object
                    description: Additional entries on the error object to provide extra details.
                    properties:
                        capability:
                            description: If the error occured because of a lack of permission (403), this will list the specific capability that the Role/API Key is missing.
                            $ref: "#/components/schemas/Capability"
        ErrorEnvelope:
            title: ErrorEnvelope
            type: object
            description: An error response.
            required:
                - error
                - data
            properties:
                error:
                    $ref: "#/components/schemas/Error"
                data:
                    type: "null"
        ID:
            title: ID
            type: string
            format: objectid
            description: A 24 character hex string used to identify a unique resource.
            examples:
                - 651586fca6078e98982dbd90
        Identifier:
            title: Identifier
            type: string
            description: |
                A human-readable identifier used to refer to a resource, where using the official ID may be inconvenient.
                The identifier is automatically tokenized from the name/relevant field of the resource if one is not provided. For example, a container named "My Container" will
                have the identifier of `my-container` and is automatically created by the platform.

                The identifier does not have to be unique.
        EnvironmentAbout:
            title: EnvironmentAbout
            type: object
            description: Contains details regarding the environment.
            required:
                - description
                - favorite
            properties:
                description:
                    type: string
                    description: A custom description for this environment.
                favorite:
                    type: boolean
                    description: If true, this environment has been marked as a favorite.
        CreatorScope:
            title: CreatorScope
            description: The creator scope is embedded in resource objects to describe who created them
            type: object
            required:
                - id
                - type
            properties:
                id:
                    $ref: "#/components/schemas/ID"
                type:
                    type: string
                    enum:
                        - account
                        - environment
                        - platform
                        - platform-pipeline
                        - employee
                        - api-key
                        - visitor
        HubID:
            title: HubID
            type: string
            description: The unique ID of the Hub this resource was created in.
            examples:
                - 651586fca6078e98982dbd90
        DateTime:
            title: DateTime
            type: string
            format: date-time
            examples:
                - "2021-01-30T08:30:00Z"
        State:
            title: State
            description: Information regarding the current state of the resource.
            type: object
            required:
                - changed
            properties:
                changed:
                    $ref: "#/components/schemas/DateTime"
                error:
                    type: object
                    description: An error, if any, that has occurred for this resource.
                    properties:
                        message:
                            type: string
                            description: Details about the error that has occurred.
                        time:
                            description: The timestamp of when the error was encountered.
                            $ref: "#/components/schemas/DateTime"
        EnvironmentState:
            title: EnvironmentState
            allOf:
                - required:
                      - current
                  properties:
                      current:
                          description: The current state of the environment.
                          type: string
                          enum:
                              - new
                              - live
                              - cloning
                              - deleting
                              - deleted
                - $ref: "#/components/schemas/State"
        EnvironmentFeatures:
            title: EnvironmentFeatures
            type: object
            description: An object representing specialized features configured for this environment.
            required:
                - legacy_networking
            properties:
                legacy_networking:
                    description: Whether or not legacy networking mode is enabled on this environment.
                    type: boolean
                monitoring:
                    description: The level of monitoring to enable for this environment. There is a cost associated with higher levels of monitoring.
                    type:
                        - object
                        - "null"
                    required:
                        - tier
                    properties:
                        tier:
                            type: string
                            enum:
                                - limited
                                - standard
                                - premium
                                - enterprise
        HaProxyConfigSet:
            title: HAProxyConfigSet
            type: object
            required:
                - frontend
                - backend
            properties:
                frontend:
                    type: object
                    description: Settings that describe how incoming traffic to the load balancer is handled.
                    required:
                        - mode
                        - max_connections
                        - timeouts
                    properties:
                        mode:
                            type: string
                            description: |-
                                The type of traffic expected by the load balancer for this port. Can be either: 
                                 - tcp: Traffic is forwarded without any parsing or additional manipulation. 
                                 - http: Traffic is treated as web traffic. If a LINKED record is configured for a container exposing this port, the domain will be parsed and it will be forwarded to the proper container. This allows multiple services to run on port 80 in the same environment.
                            enum:
                                - tcp
                                - http
                        max_connections:
                            type:
                                - integer
                                - "null"
                            description: The number of simultaneous connections that can be processed at a time.
                        timeouts:
                            type:
                                - object
                                - "null"
                            description: Various options for handling timeouts when communicating with the client.
                            required:
                                - client_secs
                                - client_fin_ms
                                - http_keep_alive_ms
                                - http_request_ms
                            properties:
                                client_secs:
                                    type:
                                        - integer
                                        - "null"
                                    description: The number of seconds the load balancer will wait for a response from a client before disconnecting.
                                client_fin_ms:
                                    type:
                                        - integer
                                        - "null"
                                    description: The number of milliseconds the load balancer will wait for a client to send it data when one direction is already closed. This is particularly useful to avoid keeping connections in a waiting state for too long when clients do not disconnect cleanly.
                                http_keep_alive_ms:
                                    type:
                                        - integer
                                        - "null"
                                    description: The number of milliseconds the load balancer will wait for a new HTTP request to start coming after a response was set. See the [HAProxy Docs](https://cbonte.github.io/haproxy-dconv/1.7/configuration.html#4.2-timeout%20http-request) for more information. (`http` mode only)
                                http_request_ms:
                                    type:
                                        - integer
                                        - "null"
                                    description: The number of milliseconds the load balancer will wait for a complete HTTP request. See the [HAProxy Docs](https://cbonte.github.io/haproxy-dconv/1.7/configuration.html#4.2-timeout%20http-request) for more information. (`http` mode only)
                backend:
                    type: object
                    description: Settings related to how the load balancer routes connections to container instances.
                    required:
                        - balance
                        - timeouts
                    properties:
                        balance:
                            type: string
                            description: |-
                                How connections are balanced across your container instances. Can be one of the following: 
                                 - `roundrobin`: Each container instance is used in turns. 
                                 - `static-rr`: Each container instance is used in turns, but is faster than Round Robin at the expense of being less dynamic. 
                                 - `leastconn`: Routes traffic to the instance with the least number of active connections. 
                                 - `first`: Routes traffic to the first available instance. 
                                 - `source`: The same client IP always reaches the same container instance as long as no instance goes down or up.
                            enum:
                                - roundrobin
                                - static-rr
                                - leastconn
                                - first
                                - source
                        timeouts:
                            type:
                                - object
                                - "null"
                            description: Various options for handling timeouts when communicating with a container instance behind the load balancer.
                            required:
                                - server_secs
                                - server_fin_ms
                                - connect_ms
                                - queue_ms
                                - tunnel_secs
                            properties:
                                server_secs:
                                    type:
                                        - integer
                                        - "null"
                                    description: The number of seconds the load balancer will wait for a response from the container instance. See the [HAProxy Docs](https://cbonte.github.io/haproxy-dconv/1.7/configuration.html#4.2-timeout%20server) for more information.
                                server_fin_ms:
                                    type:
                                        - integer
                                        - "null"
                                    description: The number of milliseconds the load balancer will wait for the server to send data when one direction is already closed. See the [HAProxy Docs](https://cbonte.github.io/haproxy-dconv/1.7/configuration.html#4-timeout%20server-fin) for more information.
                                connect_ms:
                                    type:
                                        - integer
                                        - "null"
                                    description: The number of milliseconds the load balancer will wait for a successful connection to a container instance. See the [HAProxy Docs](https://cbonte.github.io/haproxy-dconv/1.7/configuration.html#4-timeout%20connect) for more information.
                                queue_ms:
                                    type:
                                        - integer
                                        - "null"
                                    description: The number of milliseconds the load balancer will hold connections in a queue when the maximum number of connections has been reached. See the [HAProxy Docs](https://cbonte.github.io/haproxy-dconv/1.7/configuration.html#4-timeout%20queue) for more information.
                                tunnel_secs:
                                    type:
                                        - integer
                                        - "null"
                                    description: The number of milliseconds the load balancer will allow for inactivity on a bidirectional tunnel. See the [HAProxy Docs](https://cbonte.github.io/haproxy-dconv/1.7/configuration.html#4-timeout%20tunnel) for more information.
        HaProxyConfig:
            title: HaProxyConfig
            type: object
            description: Describes settings that are passed to HAProxy within the load balancer.
            required:
                - default
                - ports
            properties:
                default:
                    description: Settings that are applied to any port that is not overridden in the following ports section.
                    $ref: "#/components/schemas/HaProxyConfigSet"
                ports:
                    description: An object that defines how HAProxy will act on a specific port. The key is a custom port, and the value is the same settings object found under `default` above.
                    type: object
                    additionalProperties:
                        $ref: "#/components/schemas/HaProxyConfigSet"
        HaProxyLbType:
            title: HaProxyLbType
            type: object
            required:
                - type
                - details
                - ipv4
                - ipv6
            properties:
                ipv4:
                    type: boolean
                    description: Allow / disallow traffic to be routed via IPv4.
                ipv6:
                    type: boolean
                    description: Allow / disallow traffic to be routed via IPv6.
                type:
                    type: string
                    enum:
                        - haproxy
                details:
                    anyOf:
                        - $ref: "#/components/schemas/HaProxyConfig"
                        - type: "null"
                bind_host:
                    description: |
                        Binds the load balancer to the host server IP address. 

                        **Pros**: This allows for significantly lower cost (utilizing fewer IPv4 addresses), and enables building out a true edge network with lower latency.
                        **Cons**: Only 1 environment is allowed on the host. This is because the load balancer is the only ingress point for an environment, and if it is sharing
                        the same IP as the host, that host can only operate under that environment.
                    type:
                        - boolean
                        - "null"
        WafConfig:
            title: WafConfig
            type: object
            description: Additional configuration options for the web application firewall.
            required:
                - rules
            properties:
                rules:
                    type: array
                    items:
                        type: object
                        required:
                            - description
                            - skip
                            - type
                            - match
                            - conditions
                        properties:
                            description:
                                description: Some information about the rule.
                                type: string
                            skip:
                                description: A boolean that indicates if the rule should be active or skipped.
                                type: boolean
                            type:
                                description: A string that describes if the role should allow or deny traffic based on the conditions.
                                type: string
                                enum:
                                    - allow
                                    - deny
                            match:
                                description: A string that describes if both attributes need to be true (match all) or if only one of the conditions needs to be true (match any).
                                type: string
                                enum:
                                    - any
                                    - all
                            conditions:
                                description: An array of the specific conditions for the rule.
                                type: array
                                items:
                                    type: object
                                    required:
                                        - type
                                        - operator
                                        - value
                                    properties:
                                        type:
                                            description: A string that describes the match type for the condition.
                                            type: string
                                            enum:
                                                - ip-match
                                                - geo-match
                                                - url-match
                                                - method-match
                                                - header-match
                                        operator:
                                            description: A string that indicates the range of values relative to the value property.
                                            type: string
                                            enum:
                                                - "=="
                                                - "!="
                                                - ">"
                                                - <
                                                - ">="
                                                - <=
                                        value:
                                            description: The value corresponding to the condition type.
                                            examples:
                                                - 0.0.0.0/0
                                            type: string
        Duration:
            title: Duration
            type: string
            description: A string signifying a duration of time. Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h", "d", "w", "y".
            examples:
                - 72h45m2s
        TcpTransportConfig:
            title: TcpTransportConfig
            description: Additional configuration options for the TCP transport mode.
            type: object
            required:
                - type
                - details
            properties:
                type:
                    type: string
                    enum:
                        - tcp
                details:
                    type: object
                    required:
                        - connections
                        - telemetry
                    properties:
                        connections:
                            type: object
                            additionalProperties: {}
                        telemetry:
                            type: object
                            description: Configuration options for how telemetry is handled on the load balancer.
                            additionalProperties: {}
        HttpTransportConfig:
            title: HttpTransportConfig
            description: Additional configuration options for the HTTP transport mode.
            type: object
            required:
                - type
                - details
            properties:
                type:
                    type: string
                    enum:
                        - http
                details:
                    type: object
                    required:
                        - connections
                        - telemetry
                    properties:
                        connections:
                            type: object
                            required:
                                - max_idle_conns_per_connection
                            description: Defines extra configuration options connections to the load balancer
                            properties:
                                max_idle_conns_per_connection:
                                    type:
                                        - integer
                                        - "null"
                                    description: Maximum number of simultaneous connections (via http/2) per connection.
                        telemetry:
                            type: object
                            description: Configuration options for how telemetry is handled.
                            properties:
                                max_trackable_urls:
                                    description: Determines how many URLs the load balancer will track at one time. Defaults to 150.
                                    type:
                                        - integer
                                        - "null"
                                track_invalid_requests:
                                    description: Whether or not to track invalid requests. An invalid request is a request that came in that no router existed for. Usually this means bot requests. Defaults to false.
                                    type:
                                        - boolean
                                        - "null"
                                ignore_paths:
                                    description: An array of paths to exclude from tracking.
                                    type:
                                        - array
                                        - "null"
                                    items:
                                        type: string
        UdpTransportConfig:
            title: UdpTransportConfig
            description: Additional configuration options for the UDP transport mode.
            type: object
            required:
                - type
                - details
            properties:
                type:
                    type: string
                    enum:
                        - udp
                details:
                    type: object
                    required:
                        - telemetry
                    properties:
                        telemetry:
                            type: object
                            description: Configuration options for how telemetry is handled on the load balancer.
                            additionalProperties: {}
        HybridIdentifier:
            title: HybridIdentifier
            type: string
            description: Either a resource ID (objectid - i.e. 651586fca6078e98982dbd90) or a resource Identifier (human-readable)
            examples:
                - my-image-source
        TcpRouterConfig:
            title: TcpRouterConfig
            description: Additional configuration options for TCP mode routers
            type: object
            required:
                - type
                - details
            properties:
                type:
                    type: string
                    enum:
                        - tcp
                details:
                    type: object
                    additionalProperties: {}
        UdpRouterConfig:
            title: UdpRouterConfig
            description: Additional configuration options for UDP mode routers
            type: object
            required:
                - type
                - details
            properties:
                type:
                    type: string
                    enum:
                        - udp
                details:
                    type: object
                    additionalProperties: {}
        HttpRouterConfig:
            title: HttpRouterConfig
            description: Additional configuration options for HTTP mode routers.
            type: object
            required:
                - type
                - details
            properties:
                type:
                    type: string
                    enum:
                        - http
                details:
                    type: object
                    properties:
                        redirect:
                            type:
                                - object
                                - "null"
                            required:
                                - auto_https_redirect
                                - remove_www
                            description: Defines a built-in redirect for HTTP mode routers
                            properties:
                                auto_https_redirect:
                                    type: boolean
                                    description: If enabled and a sibling controller exists for port 443, requests will be auto redirected to it. Essentially sets up automatic TLS redirection for this router.
                                remove_www:
                                    description: If true, any request comes in with "www" prefix will be permanently redirected to the same path without www.
                                    type: boolean
                                port:
                                    type:
                                        - integer
                                        - "null"
                                    description: The port to redirect traffic to.
                                scheme:
                                    type:
                                        - string
                                        - "null"
                                    description: The scheme to redirect to. (i.e. `https`)
                                url:
                                    type:
                                        - string
                                        - "null"
                                    description: A specific URL to redirect to.
                        forward:
                            type:
                                - object
                                - "null"
                            properties:
                                scheme:
                                    type:
                                        - string
                                        - "null"
                                content_mod:
                                    description: Allows the load balancer to modify content before it reaches the user.
                                    type:
                                        - object
                                        - "null"
                                    properties:
                                        replace:
                                            description: An array that describes a list of replacement match/value pairs.
                                            type:
                                                - array
                                                - "null"
                                            items:
                                                type: object
                                                required:
                                                    - match
                                                    - value
                                                properties:
                                                    match:
                                                        description: String that will be replaced.
                                                        type: string
                                                    value:
                                                        description: Replacement value.
                                                        type: string
                                url:
                                    type: string
                                    description: |
                                        The URL to forward the request to.

                                        Given a path match of `^/example/(.*)$`, a route such as `/example/wow.jpg` would be forwarded as /wow.jpg.
                                    examples:
                                        - /$$1
                        proxy:
                            type:
                                - object
                                - "null"
                            properties:
                                domain:
                                    type:
                                        - string
                                        - "null"
                                    description: The domain that this router will proxy.
                                url:
                                    description: The full URL that this router will proxy.
                                    type:
                                        - string
                                        - "null"
                                content_mod:
                                    description: Allows the load balancer to modify content before it reaches the user.
                                    type:
                                        - object
                                        - "null"
                                    properties:
                                        replace:
                                            description: An array that describes a list of replacement match/value pairs.
                                            type:
                                                - array
                                                - "null"
                                            items:
                                                type: object
                                                required:
                                                    - match
                                                    - value
                                                properties:
                                                    match:
                                                        description: String that will be replaced.
                                                        type: string
                                                    value:
                                                        description: Replacement value.
                                                        type: string
                        caching:
                            type:
                                - object
                                - "null"
                            properties:
                                files:
                                    type:
                                        - array
                                        - "null"
                                    items:
                                        type: object
                                        required:
                                            - match
                                            - ttl
                                        properties:
                                            match:
                                                description: Regex string that describes the files to cache.
                                                examples:
                                                    - (.*)\.(js|jpg|css|png|svg)$
                                                type: string
                                            ttl:
                                                description: Time string that describes the time to live.
                                                $ref: "#/components/schemas/Duration"
        V1LbConfigRouter:
            title: V1LbRouterConfig
            description: A specific router configuration that describes how traffic matching the rule is handled.
            type: object
            required:
                - match
                - mode
                - config
            properties:
                match:
                    type: object
                    description: The ruleset for this router to be selected. If both `domains`` and `internal_port` are null, then this match acts as a wildcard and will match all.
                    required:
                        - domains
                        - internal_ports
                    properties:
                        domains:
                            description: The specific domains to match against.
                            oneOf:
                                - type: array
                                  items:
                                      type: string
                                - type: "null"
                        internal_ports:
                            description: The specific ports to match against.
                            oneOf:
                                - type: array
                                  items:
                                      type: integer
                                - type: "null"
                        path:
                            type:
                                - string
                                - "null"
                        containers:
                            type:
                                - object
                                - "null"
                            description: Match traffic destined (or not destined) for a particular container.
                            properties:
                                include:
                                    description: Match any traffic that would be routed to one of these containers.
                                    oneOf:
                                        - type: array
                                          items:
                                              $ref: "#/components/schemas/HybridIdentifier"
                                        - type: "null"
                                exclude:
                                    description: Match any traffic that would NOT be routed to one of these containers.
                                    oneOf:
                                        - type: array
                                          items:
                                              $ref: "#/components/schemas/HybridIdentifier"
                                        - type: "null"
                mode:
                    type: string
                    description: |
                        How to route the traffic to the destination.
                        `random`: Pick a valid destination at random.
                        `round-robin`: Send each request to the 'next' destination on the list, restarting from the beginning when the last destination is used.
                    enum:
                        - random
                        - round-robin
                config:
                    type: object
                    required:
                        - sticky_sessions
                        - destination_retries
                        - timeouts
                    properties:
                        sticky_sessions:
                            type: boolean
                            description: If a request comes in from the same origin, ensure it hits the same destination.
                        destination_retries:
                            type: integer
                            description: If a destination is unavailable, retry up to [x] times, instead of immediately failing with a 503/504 error.
                        destination_prioritization:
                            default: null
                            oneOf:
                                - type: string
                                  description: |
                                      Hints to the load balancer how to prioritize traffic to instances.
                                      **random**: Chooses a random instance. **latency**: Prioritizes lower latency instances.
                                  enum:
                                      - latency
                                      - random
                                - type: "null"
                        tls:
                            type:
                                - object
                                - "null"
                            description: TLS termination configuration. If null, the platform will use the default configuration. Port 443 by default has TLS termination enabled.
                            properties:
                                server_name:
                                    type:
                                        - string
                                        - "null"
                                    description: |
                                        [Advanced] Change the domain the controller listens on.
                                allow_insecure:
                                    type:
                                        - boolean
                                        - "null"
                                    description: If enabled, accept TLS traffic with an invalid certificate. This is usually done for development/testing, and is not recommended for production use.
                                client_cert_auth:
                                    description: A PEM encoded string of certificates.
                                    type:
                                        - string
                                        - "null"
                                client_auth:
                                    description: |
                                        Defines how to validate the connecting TLS certificate.
                                        `none`: Do not require a TLS certificate to be sent
                                        `request`: Asks the client to send a TLS certificate, but does not require nor validate it.
                                        `require`: Requires a certificate be sent for the request to be valid, but does not validate the certificate.
                                        `require-verify`: Requires both that the client send a certificate, and that the certificate is valid. This is required when using https.
                                    oneOf:
                                        - type: string
                                          enum:
                                              - none
                                              - request
                                              - require
                                              - require-verify
                                        - type: "null"
                        timeouts:
                            type: object
                            description: Defines how the length of various sorts of timeouts when communicating with the destination.
                            required:
                                - destination_connection
                            properties:
                                destination_connection:
                                    $ref: "#/components/schemas/Duration"
                                    description: The duration the load balancer will wait before timing out while attempting to connect to the destination.
                        extension:
                            anyOf:
                                - type: "null"
                                - type: object
                                  description: Additional configuration options specific to the selected mode (tcp/http).
                                  discriminator:
                                      propertyName: type
                                      mapping:
                                          tcp: "#/components/schemas/TcpRouterConfig"
                                          udp: "#/components/schemas/UdpRouterConfig"
                                          http: "#/components/schemas/HttpRouterConfig"
                                  oneOf:
                                      - $ref: "#/components/schemas/TcpRouterConfig"
                                      - $ref: "#/components/schemas/HttpRouterConfig"
                                      - $ref: "#/components/schemas/UdpRouterConfig"
        V1LbController:
            title: V1LbController
            type: object
            required:
                - identifier
                - port
            properties:
                identifier:
                    type: string
                    description: A human-readable identifier for this controller. It will default to the port, i.e. `port-443`, but can be renamed to anything, such as the service this controller represents.
                port:
                    type: integer
                    description: The port inbound trafic is accepted on.
                waf:
                    anyOf:
                        - $ref: "#/components/schemas/WafConfig"
                        - type: "null"
                transport:
                    title: V1LbControllerTransport
                    description: Defines how traffic comes in to the load balancer, and how the load balancer handles it.
                    oneOf:
                        - type: "null"
                        - type: object
                          required:
                              - mode
                              - config
                              - routers
                              - disable
                          properties:
                              disable:
                                  type: boolean
                                  description: When true, this controller is disabled and will not be used.
                              mode:
                                  type: string
                                  description: The kind of traffic (http/tcp/udp) that will be sent to the load balancer.
                                  enum:
                                      - tcp
                                      - udp
                                      - http
                              config:
                                  type: object
                                  description: Defines how the transport for this controller operates.
                                  required:
                                      - performance
                                      - ingress
                                      - timeouts
                                      - verbosity
                                  properties:
                                      performance:
                                          type: boolean
                                          description: |
                                              Enable/disable performance mode. If enabled, some telemetry will be disabled to dedicate full processing to handling requests.
                                              You will not see per-request breakdowns or URL logging if performance mode is enabled.
                                      ingress:
                                          type: object
                                          description: Defines how traffic gets into the load balancer.
                                          properties:
                                              tls:
                                                  type:
                                                      - object
                                                      - "null"
                                                  required:
                                                      - enable
                                                  properties:
                                                      enable:
                                                          type: boolean
                                                          description: Enables or disables TLS.
                                      timeouts:
                                          type: object
                                          description: Defines settings for various types of timeouts.
                                          required:
                                              - idle
                                          properties:
                                              idle:
                                                  description: The total amount of time a connection can be idle before being killed.
                                                  $ref: "#/components/schemas/Duration"
                                      verbosity:
                                          type: string
                                          description: Verbosity describes the level of logging detail for the controller
                                          enum:
                                              - low
                                              - normal
                                              - high
                                              - debug
                                      extension:
                                          type: object
                                          description: Extended configurations for the specified transport mode (http/tcp)
                                          discriminator:
                                              propertyName: type
                                              mapping:
                                                  tcp: "#/components/schemas/TcpTransportConfig"
                                                  http: "#/components/schemas/HttpTransportConfig"
                                                  udp: "#/components/schemas/UdpTransportConfig"
                                          oneOf:
                                              - $ref: "#/components/schemas/TcpTransportConfig"
                                              - $ref: "#/components/schemas/HttpTransportConfig"
                                              - $ref: "#/components/schemas/UdpTransportConfig"
                              routers:
                                  type: array
                                  description: Defines where traffic is sent. Many can be defined per controller.
                                  items:
                                      $ref: "#/components/schemas/V1LbConfigRouter"
        V1LbConfig:
            title: V1LbConfig
            type: object
            required:
                - controllers
            properties:
                controllers:
                    type: array
                    description: A configuration for a specific port.
                    items:
                        $ref: "#/components/schemas/V1LbController"
                controller_template:
                    anyOf:
                        - $ref: "#/components/schemas/V1LbController"
                        - type: "null"
                waf:
                    anyOf:
                        - $ref: "#/components/schemas/WafConfig"
                        - type: "null"
        V1LbType:
            title: V1LbType
            type: object
            required:
                - type
                - details
                - ipv4
                - ipv6
            properties:
                ipv4:
                    type: boolean
                    description: Allow / disallow traffic to be routed via IPv4.
                ipv6:
                    type: boolean
                    description: Allow / disallow traffic to be routed via IPv6.
                type:
                    type: string
                    enum:
                        - v1
                details:
                    $ref: "#/components/schemas/V1LbConfig"
                bind_host:
                    description: |
                        Binds the load balancer to the host server IP address. 

                        **Pros**: This allows for significantly lower cost (utilizing fewer IPv4 addresses), and enables building out a true edge network with lower latency.
                        **Cons**: Only 1 environment is allowed on the host. This is because the load balancer is the only ingress point for an environment, and if it is sharing
                        the same IP as the host, that host can only operate under that environment.
                    type:
                        - boolean
                        - "null"
        DefaultLbType:
            title: DefaultLbType
            type: object
            required:
                - type
                - details
                - ipv4
                - ipv6
            properties:
                ipv4:
                    type: boolean
                    description: Allow / disallow traffic to be routed via IPv4.
                ipv6:
                    type: boolean
                    description: Allow / disallow traffic to be routed via IPv6.
                type:
                    type: string
                    enum:
                        - default
                details:
                    oneOf:
                        - $ref: "#/components/schemas/HaProxyConfig"
                        - $ref: "#/components/schemas/V1LbConfig"
                        - type: "null"
        LoadBalancerConfig:
            title: LoadBalancerConfig
            type: object
            description: The config object for the loadbalancer service.
            discriminator:
                propertyName: type
                mapping:
                    haproxy: "#/components/schemas/HaProxyLbType"
                    v1: "#/components/schemas/V1LbType"
                    default: "#/components/schemas/DefaultLbType"
            oneOf:
                - $ref: "#/components/schemas/V1LbType"
                - $ref: "#/components/schemas/HaProxyLbType"
                - $ref: "#/components/schemas/DefaultLbType"
        LoadBalancerEnvironmentService:
            title: LoadBalancerEnvironmentService
            type: object
            description: Information about the environments loadbalancer service(s).
            required:
                - enable
                - container_id
                - high_availability
                - config
            properties:
                enable:
                    type: boolean
                    description: Whether or not the loadbalancer service is enabled.
                container_id:
                    type:
                        - string
                        - "null"
                    description: The ID of the loadbalancer service container
                high_availability:
                    type: boolean
                    description: A boolean representing if this service container is set to high availability mode or not.
                auto_update:
                    type: boolean
                    description: A boolean representing if this service container is set to autoupdate or not
                config:
                    anyOf:
                        - $ref: "#/components/schemas/LoadBalancerConfig"
                        - type: "null"
        DiscoveryConfig:
            title: DiscoveryConfig
            type: object
            description: The config object for the discovery service.
            properties:
                empty_set_delay:
                    anyOf:
                        - $ref: "#/components/schemas/Duration"
                        - type: "null"
                hosts:
                    type:
                        - object
                        - "null"
                    description: A mapping of hostnames to IP addresses for custom internal resolutions. Acts as a custom /etc/resolv.conf file that works environment wide.
                    additionalProperties:
                        type: object
                        properties:
                            ipv4:
                                description: The IPv4 address the discovery server should return to any container instance requesting this hostname.
                                type:
                                    - array
                                    - "null"
                                items:
                                    type: string
                            ipv6:
                                description: The IPv6 address the discovery server should return to any container instance requesting this hostname.
                                type:
                                    - array
                                    - "null"
                                items:
                                    type: string
                custom_resolvers:
                    description: A list of custom DNS resolver strings.  Can specifify domains or ips.
                    type: array
                    items:
                        type: string
        DiscoveryEnvironmentService:
            title: DiscoveryEnvironmentService
            type: object
            description: Information about the environments discovery service(s).
            required:
                - enable
                - container_id
                - high_availability
                - config
            properties:
                enable:
                    type: boolean
                    description: Whether or not the discovery service is enabled.
                container_id:
                    type: string
                    description: The ID of the discovery service container
                high_availability:
                    type: boolean
                    description: A boolean representing if this service container is set to high availability mode or not.
                auto_update:
                    type: boolean
                    description: A boolean where `true` represents the desire to automatically update the environment discovery service.
                config:
                    description: The config object for the discovery service.
                    anyOf:
                        - $ref: "#/components/schemas/DiscoveryConfig"
                        - type: "null"
        VpnEnvironmentService:
            title: VpnEnvironmentService
            type: object
            description: Information about the environments vpn service(s).
            required:
                - enable
                - container_id
                - high_availability
                - config
            properties:
                enable:
                    type: boolean
                    description: Whether or not the VPN service is enabled.
                container_id:
                    type: string
                    description: The ID of the VPN service container
                auto_update:
                    type: boolean
                    description: A boolean representing if this service container is set to autoupdate or not
                config:
                    type:
                        - object
                        - "null"
                    description: The config object for the VPN service.
                    required:
                        - allow_internet
                        - auth
                    properties:
                        allow_internet:
                            type: boolean
                            description: If true, routes all traffic through the VPN, even non-Cycle traffic.
                        auth:
                            type: object
                            description: Auth configuration for the VPN.
                            required:
                                - webhook
                                - cycle_accounts
                            properties:
                                webhook:
                                    type:
                                        - string
                                        - "null"
                                    description: A webhook endpoint to hit. Will be passed the login credentials provided to the user, and should return a 200 status if the login is permitted.
                                cycle_accounts:
                                    type: boolean
                                    description: If true, allows any Cycle account with access to the environment to log in to the VPN using their Cycle email and password.
                                vpn_accounts:
                                    type: boolean
                                    description: If true, allows the custom VPN accounts to log in to the VPN.
        SchedulerAccessKey:
            title: SchedulerAccessKey
            description: Custom authorization keys for the scheduler service.
            type: object
            required:
                - name
                - secret
            properties:
                name:
                    type: string
                    description: The name given to this access key
                secret:
                    type: string
                    description: The access key secret. This should be submitted with requests to a publicly accessible scheduler service.
                ips:
                    type: array
                    description: Whitelisted IPs that are allowed to make requests to the scheduler service.
                    items:
                        type: string
        SchedulerConfig:
            title: SchedulerConfig
            description: Configuration options for the scheduler Environment service.
            type: object
            required:
                - public
            properties:
                public:
                    type: boolean
                    description: |
                        If true, this scheduler will be accessible over the public internet. It will enable a LINKED record to be pointed to the scheduler container, and inbound requests to trigger function containers.
                access_keys:
                    type: array
                    items:
                        $ref: "#/components/schemas/SchedulerAccessKey"
        SchedulerEnvironmentService:
            title: SchedulerEnvironmentService
            type: object
            description: Information about the environments scheduler service. The scheduler is used by containers with a function deployment strategy to route requests to the correct instances.
            required:
                - enable
                - container_id
                - high_availablity
            properties:
                enable:
                    type: boolean
                    description: Whether or not the scheduler service is enabled.
                container_id:
                    type:
                        - string
                        - "null"
                    description: The ID of the scheduler service container.
                high_availability:
                    type: boolean
                    description: A boolean representing if the scheduler service container is set to high availability. mode or not. As of Jan 2024, this will always be false because HA is not availiable for the scheduler service.
                auto_update:
                    type: boolean
                    description: A boolean where `true` represents the desire to automatically update the environment scheduler service.
                config:
                    anyOf:
                        - $ref: "#/components/schemas/SchedulerConfig"
                        - type: "null"
        GatewayEnvironmentService:
            title: GatewayEnvironmentService
            type: object
            description: Information about the environments gateway service(s).
            required:
                - enable
                - container_id
                - high_availability
                - config
            properties:
                enable:
                    type: boolean
                    description: Whether or not the gateway service is enabled.
                container_id:
                    type: string
                    description: The ID of the gateway service container
                high_availability:
                    type: boolean
                    description: A boolean representing if this service container is set to high availability mode or not.
                auto_update:
                    type: boolean
                    description: A boolean where `true` represents the desire to automatically update the environment gateway service.
        EnvironmentServices:
            title: EnvironmentServices
            type: object
            description: Service containers run by this environment and their configurations.
            required:
                - loadbalancer
            properties:
                loadbalancer:
                    anyOf:
                        - $ref: "#/components/schemas/LoadBalancerEnvironmentService"
                        - type: "null"
                discovery:
                    anyOf:
                        - $ref: "#/components/schemas/DiscoveryEnvironmentService"
                        - type: "null"
                vpn:
                    anyOf:
                        - $ref: "#/components/schemas/VpnEnvironmentService"
                        - type: "null"
                scheduler:
                    anyOf:
                        - $ref: "#/components/schemas/SchedulerEnvironmentService"
                        - type: "null"
                gateway:
                    anyOf:
                        - $ref: "#/components/schemas/GatewayEnvironmentService"
                        - type: "null"
        ACL:
            title: ACL
            description: An access control list. Defines which roles have which permissions on specific resources.
            type: object
            properties:
                roles:
                    type: object
                    additionalProperties:
                        type: object
                        title: ACLEntry
                        description: Permissions for an ACL entry.
                        required:
                            - view
                            - modify
                            - manage
                        properties:
                            view:
                                type: boolean
                                description: Can the user see / use this resource?
                            modify:
                                type: boolean
                                description: Can the user edit the state / name / identifier of this resource?
                            manage:
                                type: boolean
                                description: Can the user delete / update ACLs for this resource?
        IPNet:
            title: IPNet
            type: object
            required:
                - ip
                - cidr
            properties:
                ip:
                    type: string
                    description: The IP address.
                    examples:
                        - fd00::21:0:0:0
                cidr:
                    type: string
                    description: The CIDR notation, describing the range of IP addresses.
                    examples:
                        - fd00::21:0:0:0/96
        LegacyNetwork:
            title: LegacyNetwork
            type: object
            description: Legacy network information for an environment.
            required:
                - subnet
            properties:
                subnet:
                    type: integer
                    description: The IPv4 subnet id.
                ipv4:
                    description: IPv4 information available from environments using legacy networking.
                    anyOf:
                        - $ref: "#/components/schemas/IPNet"
                        - type: "null"
        PrivateNetwork:
            title: PrivateNetwork
            type: object
            required:
                - vxlan_tag
                - subnet
                - ipv6
                - legacy
            properties:
                vxlan_tag:
                    type: integer
                    description: The vxlan tag added to each packet to help identify the network.
                subnet:
                    type: string
                    description: The subnet ID.
                ipv6:
                    allOf:
                        - description: The IPv6 interface.
                        - $ref: "#/components/schemas/IPNet"
                legacy:
                    anyOf:
                        - $ref: "#/components/schemas/LegacyNetwork"
                        - type: "null"
        Version:
            title: Version
            type: string
            description: |
                Version can be any string, but if it begins with a "v", semantic version will be enforced. A [Semantic Version](https://semver.org/) string. Follows the format vMAJOR.MINOR.PATCH-build.
            examples:
                - v1.2.3-dev
        EnvironmentDeploymentTags:
            title: EnvironmentDeploymentTags
            type: object
            description: |
                A map of custom tags to deployment versions. Allows for defining a custom, persistent tag with a changing version number. 
                For example, `dev -> v1.2.3-dev`. This is useful when dealing with DNS LINKED records, where you always want dev.example.com to point to the 
                `dev` version of your app within an environment, where you can continuously deploy and update it without needing to change the record. It is 
                even more useful when you have multiple LINKED records, and you update i.e. `prod`` tag to point to a new version, all records using the `prod` tag
                are switched at once.
            additionalProperties:
                $ref: "#/components/schemas/Version"
        StateCountSummary:
            title: ResourceCountSummary
            type: object
            description: A summary of resources by state
            required:
                - state
                - total
                - available
            properties:
                state:
                    title: CountsByState
                    type: object
                    description: A count of this resource, grouped by state.
                    additionalProperties:
                        type: integer
                total:
                    type: integer
                    description: The total number of this resource
                available:
                    type: integer
                    description: The total number of this resource available, less any deleted ones.
            example:
                state:
                    new: 0
                    starting: 0
                    running: 5
                    stopping: 0
                    deleting: 0
                    deleted: 0
                total: 5
                available: 5
        ContainerState:
            title: ContainerState
            allOf:
                - required:
                      - current
                  properties:
                      current:
                          description: The current state of the container.
                          type: string
                          enum:
                              - new
                              - starting
                              - running
                              - function
                              - stopping
                              - stopped
                              - deleting
                              - deleted
                      desired:
                          description: The desired state of the container.
                          type: string
                          enum:
                              - new
                              - starting
                              - running
                              - function
                              - stopping
                              - stopped
                              - deleting
                              - deleted
                - $ref: "#/components/schemas/State"
        ContainerImageSummary:
            title: ContainerImageSummary
            description: The Id of the image and information on if it is a service.
            type: object
            required:
                - id
                - service
            properties:
                id:
                    $ref: "#/components/schemas/ID"
                service:
                    anyOf:
                        - type: string
                          description: If this image is a service container this will say either `discovery` | `loadbalancer` | `vpn`.
                          enum:
                              - discovery
                              - loadbalancer
                              - vpn
                        - type: "null"
        ContainerEnvironmentSummary:
            title: ContainerEnvironmentSummary
            description: A summary of supplemental environment and network information specific to a container.
            type: object
            required:
                - id
                - cluster
            properties:
                id:
                    $ref: "#/components/schemas/ID"
                cluster:
                    type: string
                    description: The cluster this environment is associated with.
                container_subnet:
                    type:
                        - string
                        - "null"
                    description: The private network subnet ID for this container and its instances.
                ipv6:
                    anyOf:
                        - $ref: "#/components/schemas/IPNet"
                        - type: "null"
                legacy:
                    anyOf:
                        - $ref: "#/components/schemas/LegacyNetwork"
                        - type: "null"
        EnvironmentMeta:
            title: EnvironmentMeta
            type: object
            description: A list of meta fields that can be applied to this environment.
            properties:
                containers_count:
                    $ref: "#/components/schemas/StateCountSummary"
                instances_count:
                    $ref: "#/components/schemas/StateCountSummary"
                containers:
                    type: array
                    items:
                        type: object
                        required:
                            - id
                            - name
                            - state
                            - image
                            - environment
                        properties:
                            id:
                                $ref: "#/components/schemas/ID"
                            name:
                                type: string
                                description: A user defined name for the container resource.
                            state:
                                $ref: "#/components/schemas/ContainerState"
                            image:
                                $ref: "#/components/schemas/ContainerImageSummary"
                            environment:
                                $ref: "#/components/schemas/ContainerEnvironmentSummary"
        Environment:
            title: Environment
            type: object
            description: Environments are groups of containers with a private network built between them. For more information on environments, see the [main docs](https://cycle.io/docs/platform/introduction-to-environments).
            required:
                - id
                - identifier
                - name
                - cluster
                - about
                - creator
                - hub_id
                - state
                - events
                - features
                - services
            properties:
                id:
                    $ref: "#/components/schemas/ID"
                identifier:
                    $ref: "#/components/schemas/Identifier"
                    description: A human readable slugged identifier for this environment.
                name:
                    type: string
                    description: A user defined name for the environment resource.
                cluster:
                    type: string
                    description: The cluster this environment is associated with.
                about:
                    $ref: "#/components/schemas/EnvironmentAbout"
                creator:
                    $ref: "#/components/schemas/CreatorScope"
                hub_id:
                    $ref: "#/components/schemas/HubID"
                state:
                    $ref: "#/components/schemas/EnvironmentState"
                events:
                    title: EnvironmentEvents
                    type: object
                    description: A collection of timestamps for each event in the environment's lifetime.
                    required:
                        - created
                        - updated
                        - deleted
                    properties:
                        created:
                            description: The timestamp of when the environment was created.
                            $ref: "#/components/schemas/DateTime"
                        updated:
                            description: The timestamp of when the environment was updated.
                            $ref: "#/components/schemas/DateTime"
                        deleted:
                            description: The timestamp of when the environment was deleted.
                            $ref: "#/components/schemas/DateTime"
                features:
                    $ref: "#/components/schemas/EnvironmentFeatures"
                services:
                    $ref: "#/components/schemas/EnvironmentServices"
                acl:
                    anyOf:
                        - $ref: "#/components/schemas/ACL"
                        - type: "null"
                private_network:
                    anyOf:
                        - $ref: "#/components/schemas/PrivateNetwork"
                        - type: "null"
                deployments:
                    type:
                        - object
                        - "null"
                    description: |
                        A map of custom tags to deployment versions.
                    required:
                        - tags
                    properties:
                        tags:
                            $ref: "#/components/schemas/EnvironmentDeploymentTags"
                meta:
                    $ref: "#/components/schemas/EnvironmentMeta"
        ContainerExtension:
            title: ContainerExtension
            type:
                - object
                - "null"
            description: Reference to container functionality that is added by the Cycle platform.
            required:
                - identifier
            properties:
                identifier:
                    type: string
                    enum:
                        - virtual-machine-v1
                id:
                    $ref: "#/components/schemas/ID"
        ServiceContainerIdentifier:
            title: ServiceContainerIdentifier
            type: string
            description: Identifier of a service Container within an Environment.
            enum:
                - discovery
                - vpn
                - loadbalancer
                - scheduler
        ImageSummary:
            title: ContainerImageSummary
            description: A summary of the image this container was created from.
            type: object
            required:
                - id
                - service
                - extension
            properties:
                id:
                    anyOf:
                        - $ref: "#/components/schemas/ID"
                        - type: "null"
                extension:
                    anyOf:
                        - $ref: "#/components/schemas/ContainerExtension"
                        - type: "null"
                service:
                    anyOf:
                        - $ref: "#/components/schemas/ServiceContainerIdentifier"
                        - type: "null"
                    description: If a service container, the identifier specifying which service it is.
        StackSummary:
            title: ContainerStackSummary
            description: A summary of the stack this container was created format.
            type: object
            properties:
                id:
                    $ref: "#/components/schemas/ID"
                build_id:
                    type: string
                    description: The ID of the stack build this container is associated with.
                identifier:
                    type: string
                    description: The container identifier, usually the key to the container section of a stack file.
        ContainerNetwork:
            title: ContainerNetwork
            type: object
            description: Network configuration for a container.
            required:
                - public
                - hostname
            properties:
                public:
                    type: string
                    description: The public network settings for the given container
                    enum:
                        - enable
                        - egress-only
                        - disable
                hostname:
                    type: string
                    description: The hostname for the given container.
                ports:
                    type: array
                    items:
                        type: string
                    description: An array of port mappings for the container.
        DeploymentStrategyName:
            title: DeploymentStrategyName
            type: string
            enum:
                - resource-density
                - high-availability
                - first-available
                - node
                - edge
                - manual
                - function
        ContainerDeploy:
            title: ContainerDeploy
            type: object
            description: Deployment configuration for the given container.
            required:
                - instances
            properties:
                instances:
                    type: integer
                    description: The number of initial desired instances for a given container.
                strategy:
                    $ref: "#/components/schemas/DeploymentStrategyName"
                    description: The deployment strategy to use when scaling the given container.
                function:
                    description: Configuration options for containers using the 'function' deployment strategy.
                    type:
                        - object
                        - "null"
                    properties:
                        max_pool_size:
                            description: The maximum number of instances that Cycle can pre-allocate (includes auto-scaled instances).
                            type:
                                - integer
                                - "null"
                        max_shard_concurrency:
                            description: For each shard (scheduler), the maximum number of tasks it can run in parallel.
                            type:
                                - integer
                                - "null"
                        max_runtime:
                            anyOf:
                                - $ref: "#/components/schemas/Duration"
                                - type: "null"
                            description: The maximum amount of time a function instance can run before timing out.
                        max_queue_time:
                            anyOf:
                                - $ref: "#/components/schemas/Duration"
                                - type: "null"
                            description: The maximum amount of time Cycle will wait for an instance to be available.
                stateful:
                    type: object
                    properties:
                        options:
                            type:
                                - object
                                - "null"
                            properties:
                                use_base_hostname:
                                    type:
                                        - boolean
                                        - "null"
                constraints:
                    type: object
                    description: Settings that give more granular control over deployment targets and conditions.
                    properties:
                        node:
                            type: object
                            description: Constraint settings related to which nodes an instance can be deployed to.
                            required:
                                - tags
                            properties:
                                tags:
                                    type: object
                                    description: Lists of server tags that formally declair servers that match the criteria for deployment.
                                    properties:
                                        any:
                                            type: array
                                            items:
                                                type: string
                                            description: A list of tags where a server matching any tags from the list is qualified as a deployment target.
                                        all:
                                            type: array
                                            items:
                                                type: string
                                            description: A list of tags where a server matching all tags from the list is the only scenario where the server is qualified as a deployment target.
                        secrets:
                            type: array
                            items:
                                type: string
                shutdown:
                    type: object
                    description: Configuration for what to do during container shutdown.
                    properties:
                        graceful_timeout:
                            anyOf:
                                - $ref: "#/components/schemas/Duration"
                                - type: "null"
                            description: How long the platform will wait for a container to stop gracefully.
                        signals:
                            type:
                                - array
                                - "null"
                            items:
                                type: string
                                enum:
                                    - SIGTERM
                                    - SIGINT
                                    - SIGUSR1
                                    - SIGUSR2
                                    - SIGHUP
                                    - SIGQUIT
                            description: Process signal sent to the container process.
                startup:
                    type: object
                    description: Configurations for container startup.
                    properties:
                        delay:
                            $ref: "#/components/schemas/Duration"
                            description: How long the platform will wait before sending the start signal to the given container.
                update:
                    type: object
                    description: Configurations for container updates.
                    properties:
                        stagger:
                            $ref: "#/components/schemas/Duration"
                            description: When set, Cycle will pick a random time from `0 - this duration`, and stagger the instances so they all start at different times (up to the time specified here).
                restart:
                    type: object
                    description: Configurations for container restart events.
                    required:
                        - condition
                        - delay
                        - max_attempts
                    properties:
                        condition:
                            type: string
                            description: Policy for what should happen in the event of a container dying.
                            enum:
                                - always
                                - never
                                - failure
                        delay:
                            $ref: "#/components/schemas/Duration"
                            description: How long the platform will wait before trying to restart the container.
                        max_attempts:
                            type: integer
                            description: The amount of times the platform will attempt the restart policies.
                health_check:
                    type: object
                    description: Configuration for determining the health of a container.
                    required:
                        - command
                        - retries
                        - delay
                        - interval
                        - timeout
                        - restart
                    properties:
                        command:
                            type: string
                            description: The command that will be run to verify the health of the container.
                        retries:
                            type: integer
                            description: The number of times the platform will retry the command before marking the container unhealthy.
                        delay:
                            anyOf:
                                - $ref: "#/components/schemas/Duration"
                                - type: "null"
                            description: How long to wait before performing an initial health check when the instance starts. The `state.health.healthy` field of the instance will be `null`` until the first check is performed.
                        interval:
                            $ref: "#/components/schemas/Duration"
                            description: How long to wait between restarts.
                        timeout:
                            $ref: "#/components/schemas/Duration"
                            description: How long before a health check attempt times out.
                        restart:
                            type: boolean
                            description: A boolean where `true` represents the desire for a container to restart if unhealthy.
                telemetry:
                    type: object
                    description: Configuration settings for container telemetery reporting.
                    required:
                        - retention
                        - interval
                        - disable
                    properties:
                        retention:
                            $ref: "#/components/schemas/Duration"
                            description: How long telemetry data should be retained.
                        interval:
                            $ref: "#/components/schemas/Duration"
                            description: The duration between samples.
                        disable:
                            type: boolean
                            description: A boolean where true disables all telemetry reporting for this container.
        ScaleThresholdMetricRam:
            title: ScaleThresholdMetricRam
            type: object
            description: Describes the RAM threshold at which scaling will occur.
            required:
                - type
                - details
            properties:
                type:
                    type: string
                    enum:
                        - ram
                details:
                    type: object
                    required:
                        - usage
                    properties:
                        usage:
                            type: string
                            description: The target average RAM usage of all instances of this container. Going above this threshold will trigger a scaling event. This threshold must be greater than 25MB.
                            examples:
                                - 2G
                                - 25MB
        ScaleThresholdMetricCpu:
            title: ScaleThresholdMetricCpu
            type: object
            description: Describes the CPU threshold at which scaling will occur
            required:
                - type
                - details
            properties:
                type:
                    type: string
                    enum:
                        - cpu
                details:
                    type: object
                    required:
                        - utilization
                    properties:
                        utilization:
                            type: integer
        WebhookURL:
            title: WebhookURL
            type: string
            description: |
                A URL describing the destination Cycle should send a POST webhook payload to.
            examples:
                - https://example.com/cycle/autoscale
        ScaleThresholdMetricCustom:
            title: ScaleThresholdMetricCustom
            type: object
            description: A custom threshold for defining a scaling event.
            required:
                - type
                - details
            properties:
                type:
                    type: string
                    enum:
                        - custom
                details:
                    type: object
                    required:
                        - webhook
                    properties:
                        webhook:
                            $ref: "#/components/schemas/WebhookURL"
        ScaleThresholdMetricNetworkConnections:
            title: ScaleThresholdMetricNetworkConnections
            type: object
            description: Describes the network connections threshold at which scaling will occur
            required:
                - type
                - details
            properties:
                type:
                    type: string
                    enum:
                        - network-connections
                details:
                    type: object
                    required:
                        - connections_total
                    properties:
                        connections_total:
                            type: integer
        ScaleThresholdMetricNetworkRequests:
            title: ScaleThresholdMetricNetworkRequests
            type: object
            description: Describes the network requests threshold at which scaling will occur
            required:
                - type
                - details
            properties:
                type:
                    type: string
                    enum:
                        - network-requests
                details:
                    type: object
                    required:
                        - requests_total
                    properties:
                        requests_total:
                            type: integer
        ScaleThresholdMetricNetworkThroughput:
            title: ScaleThresholdMetricNetworkThroughput
            type: object
            description: Describes the network throughput threshold at which scaling will occur
            required:
                - type
                - details
            properties:
                type:
                    type: string
                    enum:
                        - network-throughput
                details:
                    type: object
                    required:
                        - private
                        - bandwidth
                    properties:
                        private:
                            type: boolean
                        bandwidth:
                            type: string
                            description: The limit (maximum) amount of throughput each instance of the given container can use before triggering a scaling event.
                            examples:
                                - 1G
                                - 2M
        ScaleThresholdMetric:
            title: ScaleThresholdMetric
            type: object
            description: Discriminated union describing the different types of scaling threshold and their respective details
            discriminator:
                propertyName: type
                mapping:
                    ram: "#/components/schemas/ScaleThresholdMetricRam"
                    cpu: "#/components/schemas/ScaleThresholdMetricCpu"
                    custom: "#/components/schemas/ScaleThresholdMetricCustom"
                    network-connections: "#/components/schemas/ScaleThresholdMetricNetworkConnections"
                    network-requests: "#/components/schemas/ScaleThresholdMetricNetworkRequests"
                    network-throughput: "#/components/schemas/ScaleThresholdMetricNetworkThroughput"
            oneOf:
                - $ref: "#/components/schemas/ScaleThresholdMetricRam"
                - $ref: "#/components/schemas/ScaleThresholdMetricCpu"
                - $ref: "#/components/schemas/ScaleThresholdMetricNetworkConnections"
                - $ref: "#/components/schemas/ScaleThresholdMetricNetworkRequests"
                - $ref: "#/components/schemas/ScaleThresholdMetricNetworkThroughput"
                - $ref: "#/components/schemas/ScaleThresholdMetricCustom"
        ContainerScale:
            title: ContainerScale
            type: object
            description: Network configuration for a container.
            required:
                - autoscale_group
                - instances
                - window
                - thresholds
            properties:
                autoscale_group:
                    type:
                        - string
                        - "null"
                    description: The autoscaling group describes which servers should be deployed
                instances:
                    type: object
                    description: Describes how many instances should be running
                    required:
                        - max
                        - max_server
                        - min_ttl
                    properties:
                        max:
                            type: integer
                            description: Maximum additional instances the auto-scaler will run at any time
                        max_server:
                            type: integer
                            description: Minimum number of instances per server
                        min_ttl:
                            $ref: "#/components/schemas/Duration"
                            description: Minimum amount of time an instance will live
                window:
                    description: Duration in which the auto-scaler will watch for changes
                    $ref: "#/components/schemas/Duration"
                thresholds:
                    description: An array of rules that dictate when a scaling event will be triggered
                    type: array
                    items:
                        $ref: "#/components/schemas/ScaleThresholdMetric"
        SeccompRule:
            title: SeccompRule
            description: Rules for controlling Linux seccomp inside a container.
            type: object
            properties:
                capabilities:
                    type: object
                    properties:
                        includes:
                            type: string
                        excludes:
                            type: string
                syscall:
                    type: object
                    description: LinuxSyscall is used to match a syscall in Seccomp
                    required:
                        - names
                        - action
                    properties:
                        names:
                            type: array
                            items:
                                type: string
                        action:
                            type: string
                        errnoRet:
                            type: integer
                        args:
                            type: array
                            items:
                                type: object
                                required:
                                    - index
                                    - value
                                    - op
                                properties:
                                    index:
                                        type: integer
                                    value:
                                        type: integer
                                    valueTwo:
                                        type: integer
                                    op:
                                        type: string
        ContainerRuntime:
            title: ContainerRuntime
            type: object
            description: Runtime configurations for a given container.
            required:
                - privileged
            properties:
                command:
                    type:
                        - object
                        - "null"
                    description: A command that will be run in place of the images defined startup command.
                    properties:
                        path:
                            type:
                                - string
                                - "null"
                            description: System path for the command.
                        args:
                            type:
                                - string
                                - "null"
                            description: Arguments to pass to the command.
                namespaces:
                    type: array
                    items:
                        type: string
                        enum:
                            - ipc
                            - pid
                            - uts
                            - network
                            - mount
                            - user
                            - cgroup
                    description: Namespaces the given container will have access to.
                environment_vars:
                    type: object
                    description: A record of environment variables for the given container.
                    additionalProperties:
                        type: string
                privileged:
                    type: boolean
                    description: Selecting this option will give this container full permissions on the server. This is not recommended and increases the likelihood of your server being compromised.
                capabilities:
                    type: array
                    items:
                        type: string
                        enum:
                            - CAP_CHOWN
                            - CAP_FSETID
                            - CAP_DAC_OVERRIDE
                            - CAP_FOWNER
                            - CAP_SETFCAP
                            - CAP_SETGID
                            - CAP_SETUID
                            - CAP_KILL
                            - CAP_MKNOD
                            - CAP_NET_BIND_SERVICE
                            - CAP_NET_RAW
                            - CAP_AUDIT_WRITE
                            - CAP_SYS_CHROOT
                            - CAP_SETPCAP
                            - CAP_DAC_READ_SEARCH
                            - CAP_NET_ADMIN
                            - CAP_NET_BROADCAST
                            - CAP_SYS_ADMIN
                            - CAP_SYS_MODULE
                            - CAP_SYS_NICE
                            - CAP_SYS_PACCT
                            - CAP_SYS_PTRACE
                            - CAP_SYS_RAWIO
                            - CAP_SYS_RESOURCE
                            - CAP_SYS_BOOT
                            - CAP_SYS_TIME
                            - CAP_SYS_TTY_CONFIG
                            - CAP_SYSLOG
                            - CAP_AUDIT_CONTROL
                            - CAP_AUDIT_READ
                            - CAP_IPC_LOCK
                            - CAP_IPC_OWNER
                            - CAP_LINUX_IMMUTABLE
                            - CAP_MAC_ADMIN
                            - CAP_MAC_OVERRIDE
                            - CAP_BLOCK_SUSPEND
                            - CAP_LEASE
                            - CAP_WAKE_ALARM
                    description: A list of linux kernel capabilites for the given container.
                workdir:
                    type: string
                    description: Configure the working directory for the given container.
                sysctl:
                    type: object
                    description: A record of sysctl fields and values for a given container.
                    additionalProperties:
                        type: string
                rlimits:
                    type: object
                    description: A record of rlimits and their values.
                    additionalProperties:
                        type: object
                        properties:
                            hard:
                                type: integer
                                description: The hard limit for the rlimit.
                            soft:
                                type: integer
                                description: The soft limit for the rlimit.
                seccomp:
                    type:
                        - object
                        - "null"
                    properties:
                        disable:
                            type: boolean
                        rules:
                            type: array
                            items:
                                $ref: "#/components/schemas/SeccompRule"
                host:
                    type:
                        - object
                        - "null"
                    properties:
                        expose_proc:
                            type:
                                - boolean
                                - "null"
                rootfs:
                    type: object
                    properties:
                        readonly:
                            description: Enabling this option will set the containers filesystem to readonly. Volumes associated with the container will not be affected by this.
                            type: boolean
                devices:
                    type:
                        - object
                        - "null"
                    properties:
                        shm_size:
                            type:
                                - string
                                - "null"
                            description: The size of the shared host memory device (/dev/shm).
                            examples:
                                - 64M
                                - 128M
                                - 512M
        ContainerResources:
            title: ContainerResources
            type: object
            description: Configuration settings for the resource allocations and limits of a given container.
            required:
                - cpu
                - ram
            properties:
                cpu:
                    type: object
                    description: Configurations settings related to CPU usage.
                    properties:
                        shares:
                            type: object
                            description: A share represents 1/10th of the available compute time on a single thread.
                            required:
                                - limit
                                - reserve
                            properties:
                                limit:
                                    type: integer
                                    description: The limit (maximum) amount of shares each instance of a container can use.
                                reserve:
                                    type: integer
                                    description: The reserve (allocation) number of shares for each instance of a given container.
                        cpus:
                            type: string
                ram:
                    type: object
                    description: Configuration settings for limits and reserves of RAM resources for the given container.
                    properties:
                        limit:
                            type: string
                            description: The limit (maximum) amount of RAM each instance of the given container can use.
                            examples:
                                - 1G
                                - 1M
                        reserve:
                            type: string
                            description: The reserve (allocation) of RAM given to each instance of the container.
        ContainerIntegrations:
            title: ContainerIntegrations
            type: object
            description: Configuration settings for integrations with a given container.
            properties:
                webhooks:
                    type: object
                    description: Webhooks that can be set for specific event reporting and advanced container configurations.
                    properties:
                        events:
                            type: object
                            description: Container events that can be configured to report to a webhook.
                            properties:
                                deploy:
                                    type: string
                                    description: A webhook to hit when a container deploy event happens.
                                start:
                                    type: string
                                    description: A webhook to hit when a container start event happens.
                                stop:
                                    type: string
                                    description: A webhook to hit when a container stop event happens.
                        config:
                            type: string
                            description: An endpoint that the platform will react out to with a get request.  This endpoint serves a partial container config which can modify `runtime`, `resources`, and `integrations` configurations.
                files:
                    type: array
                    description: Inject remotely hosted files into container instances at runtime.
                    items:
                        type: object
                        description: These objects are sources and destinations for the given files.
                        required:
                            - source
                            - destination
                        properties:
                            source:
                                type: string
                                description: The http endpoint that is hosting the files to be used.
                            destination:
                                type: string
                                description: The path in the container for these files to be injected.
                lets_encrypt:
                    type:
                        - object
                        - "null"
                    description: Configuration settings to embed a TLS certificate in the container.
                    properties:
                        certificate_path:
                            type: string
                            description: Path where the `certificate.cert` will be saved.
                        chain_path:
                            type: string
                            description: Path where the `certificate.chain` will be saved.
                        key_path:
                            type: string
                            description: Path where the `certificate.key` will be saved.
                        bundle_path:
                            type: string
                            description: Path where the `certificate.bundle` will be saved.
                        additional_certs_path:
                            type: string
                            description: File path where any remaining certificate files will be stored.
                backups:
                    type: object
                    description: Automated backups configuration for the given container.
                    required:
                        - destination
                        - backup
                        - restore
                        - retention
                    properties:
                        integration_id:
                            $ref: "#/components/schemas/HybridIdentifier"
                        backup:
                            type: object
                            description: Configuration settings for each backup.
                            required:
                                - command
                            properties:
                                command:
                                    type: string
                                    description: The command to run for the backup.
                                timeout:
                                    anyOf:
                                        - $ref: "#/components/schemas/Duration"
                                        - type: "null"
                                    description: How long the backup will attempt to run before timing out.
                                cron_string:
                                    type: string
                                    description: A cron string that configures how often the backup will run.
                        restore:
                            type:
                                - object
                                - "null"
                            description: Configuration settings for restoring from a backup.
                            required:
                                - command
                            properties:
                                command:
                                    type: string
                                    description: The command to run for restoring from a backup.
                                timeout:
                                    type: string
                                    description: The time in seconds for the restore to attempt to complete before timing out.
                                    allOf:
                                        - $ref: "#/components/schemas/Duration"
                        retention:
                            anyOf:
                                - $ref: "#/components/schemas/Duration"
                                - type: "null"
                            description: How long the platform will keep backups. Default is 1 year.
                            default: 365d
                shared_file_systems:
                    type:
                        - object
                        - "null"
                    additionalProperties:
                        type: object
                        required:
                            - writable
                            - mount_point
                        properties:
                            writable:
                                type: boolean
                            mount_point:
                                type: string
                logs:
                    description: When enabled, allows more customization to be applied to logging for the container.
                    oneOf:
                        - type: object
                          properties:
                              drain:
                                  description: When enabled, log drain allows logs to be exported to a third party service.
                                  oneOf:
                                      - type: object
                                        required:
                                            - url
                                        properties:
                                            url:
                                                description: The URL to the third party logging service where logs will be sent.
                                                type: string
                                      - type: "null"
                        - type: "null"
        Config:
            title: ContainerConfig
            description: A container configuration.
            type: object
            required:
                - network
                - deploy
            properties:
                network:
                    $ref: "#/components/schemas/ContainerNetwork"
                deploy:
                    $ref: "#/components/schemas/ContainerDeploy"
                scale:
                    $ref: "#/components/schemas/ContainerScale"
                runtime:
                    $ref: "#/components/schemas/ContainerRuntime"
                resources:
                    $ref: "#/components/schemas/ContainerResources"
                integrations:
                    $ref: "#/components/schemas/ContainerIntegrations"
        Deployment:
            title: Deployment
            description: |
                A logical grouping of containers inside of an Environment. Facilitates zero-downtime deployments by separating multiple versions of the same application within an environment.

                If a container is a member of a deployment, it can only resolve containers in that same deployment, or containers NOT in a deployment. If a container is NOT a member of a deployment, it can resolve all containers in the environment.
            type: object
            required:
                - version
            properties:
                version:
                    $ref: "#/components/schemas/Version"
                    description: |
                        A version string representing the deployment.
        ContainerVolume:
            title: ContainerVolume
            type: object
            description: Configuration settings for container volumes.
            required:
                - read_only
                - block_device
                - destination
            properties:
                read_only:
                    type: boolean
                    description: A boolean where true marks the volume as read only.
                block_device:
                    type: boolean
                    description: |
                        Indicates that the volume will be used as unformatted block storage.
                local:
                    type: object
                    description: Configuration for settings local to the container filesystem.
                    required:
                        - max_size
                    properties:
                        max_size:
                            type: string
                            description: The maximum size this volume can grow to. Container volumes on Cycle are thinly provisioned, meaning this isn't an allocation - the volume will only use the space it needs up to this size.
                            examples:
                                - 10G
                        storage_pool:
                            type: boolean
                            description: A boolean where true signifies using the largest drive over 2TB for the target server.
                destination:
                    type: string
                    description: The mountpoint path for the container.
                remote_access:
                    type: object
                    description: Configuration settings for remotely accessing the container volume.
                    required:
                        - enable
                        - password
                    properties:
                        enable:
                            type: boolean
                            description: A boolean where true represents this container volume being open to remote access connections over SFTP.
                        ips:
                            type: array
                            items:
                                type: string
                        webhook:
                            type: string
                            description: Call out to a webhook to authenticate usernames/passwords if an organization manages their own accounts
                        password:
                            type:
                                - object
                                - "null"
                            description: Password configuration settings for the remote access of the container volume.
                            required:
                                - algorithm
                                - data
                            properties:
                                algorithm:
                                    type: string
                                    description: The hashing algorithm used to has the password.
                                    enum:
                                        - raw
                                        - sha512
                                        - md5
                                data:
                                    type: string
                                    description: The raw or hashed password.
        VolumeSummary:
            title: VolumeSummary
            type: object
            description: A summary of relevant volume information.
            required:
                - id
                - hash
                - config
            properties:
                id:
                    $ref: "#/components/schemas/ID"
                hash:
                    type: string
                    description: A unique hash for the given volume.
                config:
                    $ref: "#/components/schemas/ContainerVolume"
        RecordTypes:
            title: DNSRecordTypes
            type: object
            description: DNS record types the platform supports.
            properties:
                a:
                    type: object
                    description: A DNS A record
                    required:
                        - ip
                    properties:
                        ip:
                            type: string
                            description: The IPv4 address that the A record should map to.
                aaaa:
                    type: object
                    description: A DNS AAAA record
                    required:
                        - ip
                    properties:
                        ip:
                            type: string
                            description: The IPv6 address that the AAAA record should map to.
                cname:
                    type: object
                    description: A DNS CNAME record
                    required:
                        - domain
                    properties:
                        domain:
                            type: string
                            description: The domain string the record resolves to.
                ns:
                    type: object
                    description: A DNS NS record
                    required:
                        - domain
                    properties:
                        domain:
                            type: string
                            description: The domain of the nameserver for this record.
                mx:
                    type: object
                    description: A DNS MX record
                    required:
                        - priority
                        - domain
                    properties:
                        priority:
                            type: integer
                            description: The priority setting for this mx record.
                        domain:
                            type: string
                            description: The domain this mx record points to.
                txt:
                    type: object
                    description: A DNS TXT record.
                    required:
                        - value
                    properties:
                        value:
                            type: string
                            description: The value for this TXT record.
                alias:
                    type: object
                    description: A DNS ALIAS record.
                    required:
                        - domain
                    properties:
                        domain:
                            type: string
                            description: The domain string returned from the DNS server when this alias record is requested.
                srv:
                    type: object
                    description: A DNS SRV record.
                    required:
                        - weight
                        - priority
                        - port
                        - domain
                    properties:
                        weight:
                            type: integer
                            description: Teh weight configured for this record - breaks ties for priority.
                        priority:
                            type: integer
                            description: The priority for the record.
                        port:
                            type: integer
                            description: The port number for the service.
                        domain:
                            type: string
                            description: The domain for the record.
                caa:
                    type: object
                    description: A DNS CAA record.
                    required:
                        - tag
                        - value
                    properties:
                        tag:
                            type: string
                            description: The ASCII string that represents the identifier of the property represented by the record.
                        value:
                            type: string
                            description: The value associated with the tag.
                linked:
                    type: object
                    description: A LINKED record is a record special to Cycle.  It represents a URL that points to a specific container or deployment of a container, however the IP address mapping in handled automatically by the platform.
                    allOf:
                        - type: object
                          required:
                              - features
                          properties:
                              features:
                                  type: object
                                  description: Features associated with this record.
                                  required:
                                      - tls
                                      - geodns
                                  properties:
                                      tls:
                                          type: object
                                          description: TLS properties of the record.
                                          required:
                                              - enable
                                          properties:
                                              enable:
                                                  type: boolean
                                                  description: A boolean, where true represents this record will be paired with a TLS certificate automatically maintained by the platform.
                                      geodns:
                                          type: object
                                          description: Options for the GeoDNS LINKED record feature.
                                          required:
                                              - enable
                                          properties:
                                              enable:
                                                  type: boolean
                                                  description: If enabled, Cycle will attempt to match inbound requests to the closest load balancer geographically.
                                      wildcard:
                                          type:
                                              - object
                                              - "null"
                                          required:
                                              - resolve_sub_domains
                                          properties:
                                              resolve_sub_domains:
                                                  description: If enabled, subdomains will resolve for wildcard records. If disabled, only the primary domain will resolve.
                                                  default: false
                                                  type: boolean
                        - oneOf:
                              - type: object
                                properties:
                                    container_id:
                                        type: string
                                        description: The ID of the container this record is related to.
                              - type: object
                                properties:
                                    deployment:
                                        type:
                                            - object
                                            - "null"
                                        description: Information about the deployment this record points to.
                                        required:
                                            - environment_id
                                            - match
                                        properties:
                                            environment_id:
                                                $ref: "#/components/schemas/ID"
                                                description: The ID of the environment with the deployment tag mapping we want to reference.
                                            match:
                                                type: object
                                                description: Describes which container and which tagged deployment this record should target.
                                                required:
                                                    - container
                                                properties:
                                                    container:
                                                        $ref: "#/components/schemas/Identifier"
                                                        description: The identifier of the container in the environment this record should point to.
                                                    tag:
                                                        description: The deployment tag that this record should point to. The tags are set on the root of an environment and map to a deployment version.
                                                        anyOf:
                                                            - $ref: "#/components/schemas/Identifier"
                                                            - type: "null"
        RecordTlsCertificate:
            title: RecordTlsCertificate
            type: object
            description: A TLS certificate assigned to a DNS record.
            required:
                - id
                - generated
                - wildcard_child
                - user_supplied
            properties:
                id:
                    $ref: "#/components/schemas/ID"
                generated:
                    $ref: "#/components/schemas/DateTime"
                wildcard_child:
                    type: boolean
                    description: A value where true represents that the certificate is using a shared wildcard cert.
                user_supplied:
                    type: boolean
                    description: If true, this certificate was manually supplied, and was not auto-generated by the platform.
                expires:
                    $ref: "#/components/schemas/DateTime"
                    description: The time that this certificate expires.
        RecordState:
            title: DNSRecordState
            allOf:
                - required:
                      - current
                  properties:
                      current:
                          description: The current state of the record.
                          type: string
                          enum:
                              - pending
                              - live
                              - deleting
                              - deleted
                - $ref: "#/components/schemas/State"
        Events:
            title: Events
            description: Describes the date and time at which certain events occurred in the lifetime of this resource.
            type: object
            additionalProperties:
                $ref: "#/components/schemas/DateTime"
        Record:
            title: DNSRecord
            type: object
            description: A DNS record.
            required:
                - id
                - hub_id
                - creator
                - zone_id
                - name
                - resolved_domain
                - type
                - features
                - state
                - events
            properties:
                id:
                    $ref: "#/components/schemas/ID"
                hub_id:
                    $ref: "#/components/schemas/HubID"
                creator:
                    $ref: "#/components/schemas/CreatorScope"
                zone_id:
                    type: string
                    description: A unique identifier for the zone
                name:
                    type: string
                    description: A name used for the record, where `@` signifies the use of the root domain.
                resolved_domain:
                    type: string
                    description: The name of the record and the origin as a domain name.
                type:
                    $ref: "#/components/schemas/RecordTypes"
                features:
                    type:
                        - object
                        - "null"
                    description: TLS features for the record.
                    required:
                        - certificate
                    properties:
                        certificate:
                            anyOf:
                                - $ref: "#/components/schemas/RecordTlsCertificate"
                                - type: "null"
                state:
                    $ref: "#/components/schemas/RecordState"
                events:
                    $ref: "#/components/schemas/Events"
        IpState:
            title: IpState
            allOf:
                - required:
                      - current
                  properties:
                      current:
                          description: The current state of the IP.
                          type: string
                          enum:
                              - assigning
                              - assigned
                              - releasing
                              - available
                - $ref: "#/components/schemas/State"
        Ip:
            title: IP
            type: object
            description: Details about an IP.
            required:
                - id
                - hub_id
                - kind
                - assingment
                - pool_id
                - address
                - gateway
                - cidr
                - state
            properties:
                id:
                    $ref: "#/components/schemas/ID"
                hub_id:
                    $ref: "#/components/schemas/HubID"
                kind:
                    type: string
                    description: The type of IP protocol this IP is.
                    enum:
                        - ipv4
                        - ipv6
                assignment:
                    type:
                        - object
                        - "null"
                    description: Information about the assignment of this IP.
                    required:
                        - container_id
                        - instance_id
                        - environment_id
                    properties:
                        container_id:
                            $ref: "#/components/schemas/ID"
                        instance_id:
                            $ref: "#/components/schemas/ID"
                        environment_id:
                            $ref: "#/components/schemas/ID"
                        virtual_machine:
                            type: object
                            description: Details about the virtual machine this IP is assigned to.
                            properties:
                                id:
                                    $ref: "#/components/schemas/ID"
                            required:
                                - id
                pool_id:
                    type: string
                    description: A unique identifier that associates the IP with an IP pool.
                address:
                    type: string
                    description: The IP address.
                gateway:
                    type: string
                    description: The IP gateway.
                cidr:
                    type: string
                    description: The CIDR for the IP.
                state:
                    $ref: "#/components/schemas/IpState"
        ContainersMeta:
            title: ContainersMeta
            type: object
            description: A list of meta fields that can be applied to a container.
            properties:
                instances_count:
                    $ref: "#/components/schemas/StateCountSummary"
                domains:
                    type:
                        - array
                        - "null"
                    items:
                        type: object
                        description: Any associated Linked Records for this container, and their fully-qualified domain name (fqdn).
                        required:
                            - fqdn
                        properties:
                            fqdn:
                                type: string
                                description: The fully qualified domain name.
                            record:
                                $ref: "#/components/schemas/Record"
                ips:
                    description: An array of IP resources.
                    type: array
                    items:
                        $ref: "#/components/schemas/Ip"
        Container:
            title: Container
            type: object
            description: Containers are a way to package together your application along with it's dependencies, and run in a resource isolated process. They provide consistency across different hosts, efficiency over traditional hosting methods, and facilitate a micro-service based approach, where each logical piece of your application is split into multiple, easily testable parts (such as API, Backend, Frontend, etc).
            required:
                - id
                - name
                - identifier
                - creator
                - environment
                - hub_id
                - image
                - config
                - instances
                - stateful
                - state
                - deprecate
                - lock
                - events
            properties:
                id:
                    $ref: "#/components/schemas/ID"
                identifier:
                    $ref: "#/components/schemas/Identifier"
                    description: A human readable slugged identifier for this container. Usually used as a key in a stack file.
                name:
                    type: string
                    description: A user defined name for the container resource.
                creator:
                    $ref: "#/components/schemas/CreatorScope"
                environment:
                    $ref: "#/components/schemas/ContainerEnvironmentSummary"
                hub_id:
                    $ref: "#/components/schemas/HubID"
                image:
                    $ref: "#/components/schemas/ImageSummary"
                stack:
                    anyOf:
                        - $ref: "#/components/schemas/StackSummary"
                        - type: "null"
                config:
                    $ref: "#/components/schemas/Config"
                deployment:
                    anyOf:
                        - $ref: "#/components/schemas/Deployment"
                        - type: "null"
                instances:
                    type: integer
                    description: The number of instances for a given container.
                volumes:
                    type: array
                    items:
                        $ref: "#/components/schemas/VolumeSummary"
                annotations:
                    type:
                        - object
                        - "null"
                    description: Custom meta data for a given container
                    additionalProperties: {}
                role:
                    description: The role of a given container if it has one.
                    oneOf:
                        - type: string
                          enum:
                              - orchestrator
                        - type: "null"
                stateful:
                    type: boolean
                    description: A boolean where true signifies the container is stateful.
                deprecate:
                    type: boolean
                    description: A boolean where true signifies the container is marked as deprecated.
                lock:
                    type: boolean
                    description: When set to true, prevents this container from being deleted.
                state:
                    $ref: "#/components/schemas/ContainerState"
                events:
                    title: ContainerEvents
                    type: object
                    description: A collection of timestamps for each event in the container's lifetime.
                    required:
                        - created
                        - updated
                        - deleted
                        - started
                    properties:
                        created:
                            description: The timestamp of when the container was created.
                            $ref: "#/components/schemas/DateTime"
                        updated:
                            description: The timestamp of when the container was updated.
                            $ref: "#/components/schemas/DateTime"
                        deleted:
                            description: The timestamp of when the container was deleted.
                            $ref: "#/components/schemas/DateTime"
                        started:
                            description: The timestamp of when the container was started.
                            $ref: "#/components/schemas/DateTime"
                meta:
                    $ref: "#/components/schemas/ContainersMeta"
        EnvironmentNetworkSummary:
            title: EnvironmentNetworkSummary
            type: object
            description: Details about the environment network this instance is a member of.
            required:
                - id
                - network_subnet
                - subnet
                - ipv6
                - legacy
                - mac_addr
                - vxlan_tag
            properties:
                id:
                    $ref: "#/components/schemas/ID"
                network_subnet:
                    type: string
                subnet:
                    type: string
                ipv6:
                    anyOf:
                        - $ref: "#/components/schemas/IPNet"
                        - type: "null"
                legacy:
                    type:
                        - object
                        - "null"
                    required:
                        - host
                        - subnet
                        - ipv4
                    properties:
                        host:
                            type: integer
                        subnet:
                            type: integer
                        ipv4:
                            anyOf:
                                - $ref: "#/components/schemas/IPNet"
                                - type: "null"
                mac_addr:
                    type: string
                vxlan_tag:
                    type: integer
        InstanceProvider:
            title: InstanceProvider
            type: object
            required:
                - vendor
                - integration_id
                - location
            properties:
                vendor:
                    type: string
                    description: The vendor of the hub provider integration related to the server this instance runs on.
                integration_id:
                    $ref: "#/components/schemas/ID"
                    description: An ID of the provider Hub integration that this instance's host node is related to.
                location:
                    type: string
                    description: The identifier of the location related to the server this instance runs on.
        InstanceState:
            title: InstanceState
            description: Information about the state of an instance.
            allOf:
                - required:
                      - current
                  properties:
                      current:
                          description: The current state of the instance.
                          type: string
                          enum:
                              - new
                              - starting
                              - migrating
                              - running
                              - stopping
                              - stopped
                              - failed
                              - deleting
                              - deleted
                      health:
                          type:
                              - object
                              - "null"
                          description: information about the health of the instance.
                          required:
                              - healthy
                              - updated
                          properties:
                              healthy:
                                  type:
                                      - boolean
                                      - "null"
                                  description: |
                                      Describes the healthiness of the instance. Health checks can be configured at the container level. 
                                      - `true`: The instance is considered healthy.
                                      - `false`: The instance is considered unhealthy.
                                      - `null`: The instance has not yet reported its health, or a health check has not yet been performed.
                              updated:
                                  description: A timestamp of the last time the instance health was updated.
                                  $ref: "#/components/schemas/DateTime"
                - $ref: "#/components/schemas/State"
        InstanceAutoScale:
            title: InstanceAutoScale
            description: Auto-scale details for instances created by auto-scale events.
            type: object
            required:
                - min_ttl
            properties:
                min_ttl:
                    $ref: "#/components/schemas/DateTime"
        MigrationInstance:
            title: MigrationInstance
            type: object
            description: Information about a migrated instance.
            required:
                - instance_id
                - server_id
            properties:
                instance_id:
                    type: string
                    description: The ID of the instance.
                server_id:
                    type: string
                    description: The ID of the server.
        InstanceMigration:
            title: InstanceMigration
            type: object
            description: Information regarding the migration of an instance, such as the server that the instance came from or the server that the instance was moved to.
            required:
                - key
                - copy_volumes
            properties:
                to:
                    anyOf:
                        - $ref: "#/components/schemas/MigrationInstance"
                        - type: "null"
                from:
                    anyOf:
                        - $ref: "#/components/schemas/MigrationInstance"
                        - type: "null"
                started:
                    description: A timestamp of when the migration was started.
                    $ref: "#/components/schemas/DateTime"
                completed:
                    description: A timestamp of when the migration was completed.
                    $ref: "#/components/schemas/DateTime"
                key:
                    type: string
                    description: A key used by the platform to verify the migration.
                copy_volumes:
                    type: boolean
                    description: A boolean where true represents the volumes for the instance should be copied to the new server as well.
        Instance:
            title: Instance
            type: object
            description: An instance of a Container.
            required:
                - id
                - creator
                - hub_id
                - container_id
                - location_id
                - environment
                - provider
                - server_id
                - ready_state
                - hostname
                - state
                - events
            properties:
                id:
                    $ref: "#/components/schemas/ID"
                creator:
                    $ref: "#/components/schemas/CreatorScope"
                hub_id:
                    $ref: "#/components/schemas/HubID"
                container_id:
                    type: string
                    description: A container identifier for the container that is associated with this instance.
                location_id:
                    type: string
                    description: A location identifier that's associated with the server this instance is deployed to.
                environment:
                    $ref: "#/components/schemas/EnvironmentNetworkSummary"
                stateful:
                    type:
                        - object
                        - "null"
                    description: If the instance is stateful, additional details relating to its stateful properties.
                    required:
                        - id
                        - base_hostname
                    properties:
                        id:
                            $ref: "#/components/schemas/ID"
                        base_hostname:
                            type: string
                            description: The base hostname for the given instance.
                function:
                    type: object
                    description: If the instance is a function, additional details relating to its function properties
                    required:
                        - seed
                    properties:
                        seed:
                            type: integer
                            description: The seed used for this function.
                provider:
                    $ref: "#/components/schemas/InstanceProvider"
                server_id:
                    $ref: "#/components/schemas/ID"
                    description: An identifier for the server this instance is deployed to.
                ready_state:
                    type: string
                    description: The state as it relates to the following. * `active` - instance can be started or stopped. * `purge` - instance should be deleted. * `hibernate` - instance is active but not allowed to run. * `configuring` - this instance is not allowed to start yet
                    enum:
                        - active
                        - purge
                        - hibernate
                        - configuring
                purge_time:
                    description: The timestamp of when the instance was purged.
                    anyOf:
                        - $ref: "#/components/schemas/DateTime"
                        - type: "null"
                hostname:
                    type: string
                    description: The hostname of the instance.
                service:
                    $ref: "#/components/schemas/ServiceContainerIdentifier"
                    description: The type of service this instance is within the environment, if any.
                extension:
                    anyOf:
                        - $ref: "#/components/schemas/ContainerExtension"
                        - type: "null"
                state:
                    $ref: "#/components/schemas/InstanceState"
                autoscale:
                    anyOf:
                        - $ref: "#/components/schemas/InstanceAutoScale"
                        - type: "null"
                migration:
                    anyOf:
                        - $ref: "#/components/schemas/InstanceMigration"
                        - type: "null"
                deployment:
                    anyOf:
                        - $ref: "#/components/schemas/Deployment"
                        - type: "null"
                events:
                    title: InstanceEvents
                    description: A collection of timestamps for each event in the instance's lifetime.
                    required:
                        - created
                        - updated
                        - deleted
                    properties:
                        created:
                            description: The timestamp of when the instance was created.
                            $ref: "#/components/schemas/DateTime"
                        updated:
                            description: The timestamp of when the instance was updated.
                            $ref: "#/components/schemas/DateTime"
                        deleted:
                            description: The timestamp of when the instance was deleted.
                            $ref: "#/components/schemas/DateTime"
        ContainerSummary:
            title: ContainerSummary
            type: object
            description: A summary of a Container.
            required:
                - id
                - name
                - creator
                - environment
                - hub_id
                - image
                - state
                - deprecate
                - lock
                - events
            properties:
                id:
                    $ref: "#/components/schemas/ID"
                name:
                    type: string
                    description: A user defined name for the Container resource.
                creator:
                    $ref: "#/components/schemas/CreatorScope"
                environment:
                    $ref: "#/components/schemas/ContainerEnvironmentSummary"
                hub_id:
                    $ref: "#/components/schemas/HubID"
                stack:
                    anyOf:
                        - $ref: "#/components/schemas/StackSummary"
                        - type: "null"
                image:
                    $ref: "#/components/schemas/ImageSummary"
                annotations:
                    type:
                        - object
                        - "null"
                    description: Custom meta data for a given Container. Not utilized by the platform.
                    additionalProperties: {}
                state:
                    $ref: "#/components/schemas/ContainerState"
                role:
                    type:
                        - string
                        - "null"
                    description: The role of a given Container if it has one.
                    enum:
                        - contductor
                deprecate:
                    type: boolean
                    description: A boolean where true signifies the Container is marked as deprecated.
                deployment:
                    anyOf:
                        - $ref: "#/components/schemas/Deployment"
                        - type: "null"
                lock:
                    type: boolean
                    description: When set to true, prevents this Container from being deleted.
                events:
                    title: ContainerEvents
                    type: object
                    description: A collection of timestamps for each event in the Container's lifetime.
                    required:
                        - created
                        - updated
                        - deleted
                        - started
                    properties:
                        created:
                            description: The timestamp of when the Container was created.
                            $ref: "#/components/schemas/DateTime"
                        updated:
                            description: The timestamp of when the Container was updated.
                            $ref: "#/components/schemas/DateTime"
                        deleted:
                            description: The timestamp of when the Container was deleted.
                            $ref: "#/components/schemas/DateTime"
                        started:
                            description: The timestamp of when the Container was started.
                            $ref: "#/components/schemas/DateTime"
        InstanceSummary:
            title: InstanceSummary
            type: object
            description: A summary of an instance of a Container.
            required:
                - id
                - creator
                - hub_id
                - container_id
                - location_id
                - environment
                - provider
                - server_id
                - ready_state
                - hostname
                - state
                - events
            properties:
                id:
                    $ref: "#/components/schemas/ID"
                creator:
                    $ref: "#/components/schemas/CreatorScope"
                hub_id:
                    $ref: "#/components/schemas/HubID"
                container_id:
                    type: string
                    description: A container identifier for the container that is associated with this instance.
                location_id:
                    type: string
                    description: A location identifier that's associated with the server this instance is deployed to.
                environment:
                    $ref: "#/components/schemas/EnvironmentNetworkSummary"
                stateful:
                    type:
                        - object
                        - "null"
                    description: If the instance is stateful, additional details relating to its stateful properties.
                    required:
                        - id
                        - base_hostname
                    properties:
                        id:
                            $ref: "#/components/schemas/ID"
                        base_hostname:
                            type: string
                            description: The base hostname for the given instance.
                autoscale:
                    anyOf:
                        - $ref: "#/components/schemas/InstanceAutoScale"
                        - type: "null"
                provider:
                    $ref: "#/components/schemas/InstanceProvider"
                server_id:
                    $ref: "#/components/schemas/ID"
                    description: An identifier for the server this instance is deployed to.
                ready_state:
                    type: string
                    description: |
                        The state as it relates to the following:
                          - `active` - instance can be started or stopped.
                          - `purge` - instance should be deleted.
                          - `hibernate` - instance is active but not allowed to run.
                          - `configuring` - this instance is not allowed to start yet
                    enum:
                        - active
                        - purge
                        - hibernate
                        - configuring
                deployment:
                    anyOf:
                        - $ref: "#/components/schemas/Deployment"
                        - type: "null"
                hostname:
                    type: string
                    description: The hostname of the instance.
                service:
                    $ref: "#/components/schemas/ServiceContainerIdentifier"
                    description: The type of service this instance is within the environment, if any.
                state:
                    $ref: "#/components/schemas/InstanceState"
        ServiceContainer:
            title: ServiceContainer
            description: Details about a service container and its instances.
            type: object
            required:
                - container
            properties:
                container:
                    $ref: "#/components/schemas/ContainerSummary"
                instances:
                    type:
                        - array
                        - "null"
                    items:
                        $ref: "#/components/schemas/InstanceSummary"
        LoadBalancerTelemetryRouterMetrics:
            title: LoadBalancerTelemetryRouterMetrics
            type: object
            required:
                - destinations
            properties:
                destinations:
                    type: object
                    additionalProperties:
                        type: object
                        required:
                            - connections
                            - requests
                            - instance_id
                            - container_id
                        properties:
                            connections:
                                type:
                                    - object
                                    - "null"
                                required:
                                    - success
                                    - unavailable
                                properties:
                                    success:
                                        type: integer
                                    unavailable:
                                        type: integer
                                    errors:
                                        type: object
                                        additionalProperties:
                                            type: integer
                                    bytes_transmitted:
                                        type: integer
                                    bytes_received:
                                        type: integer
                            requests:
                                type:
                                    - object
                                    - "null"
                                required:
                                    - total
                                properties:
                                    total:
                                        type: integer
                                    responses:
                                        type: object
                                        additionalProperties:
                                            type: integer
                                    errors:
                                        type: object
                                        additionalProperties:
                                            type: integer
                            latency_ms:
                                type: array
                                items:
                                    type: integer
                            instance_id:
                                type: string
                            container_id:
                                type: string
        LoadBalancerTelemetryUrlRequestHandler:
            title: LoadBalancerTelemetryUrlRequestHandler
            type: object
            required:
                - hits
                - timing_ms
            properties:
                hits:
                    description: The number of hits to a specific URL handler.
                    type: integer
                timing_ms:
                    description: The cumulative ms of response time across all hits.
                    type: integer
        LoadBalancerTelemetryUrlMetrics:
            title: LoadBalancerTelemetryUrlMetrics
            type: object
            required:
                - destinations
            properties:
                destinations:
                    type: object
                    additionalProperties:
                        type: object
                        required:
                            - requests
                        properties:
                            requests:
                                type:
                                    - object
                                    - "null"
                                required:
                                    - host
                                    - method
                                    - path
                                    - total
                                    - last_hit
                                    - handlers
                                properties:
                                    host:
                                        type: string
                                        description: The host name of the URL request.
                                        examples:
                                            - abc.cycle.io
                                    method:
                                        type: string
                                        description: The HTTP method of the URL request.
                                        examples:
                                            - GET
                                    path:
                                        type: string
                                        description: The path portion of the inbound URL request.
                                        examples:
                                            - /pathname
                                    total:
                                        type: integer
                                        description: The number of requests to a this URL.
                                        examples:
                                            - 5
                                            - 10
                                    last_hit:
                                        description: The date of the most recent hit to the URL.
                                        $ref: "#/components/schemas/DateTime"
                                    handlers:
                                        type: object
                                        description: An object describing the relative breakdown of proxy, cache, forward, and redirect URL responses.
                                        required:
                                            - proxy
                                            - cache
                                            - forward
                                            - redirect
                                        properties:
                                            proxy:
                                                description: Object containing hit count and timing data for proxy responses.
                                                $ref: "#/components/schemas/LoadBalancerTelemetryUrlRequestHandler"
                                            cache:
                                                description: Object containing hit count and timing data for cache responses.
                                                $ref: "#/components/schemas/LoadBalancerTelemetryUrlRequestHandler"
                                            forward:
                                                description: Object containing hit count and timing data for forward responses.
                                                $ref: "#/components/schemas/LoadBalancerTelemetryUrlRequestHandler"
                                            redirect:
                                                description: Object containing hit count and timing data for redirect responses.
                                                $ref: "#/components/schemas/LoadBalancerTelemetryUrlRequestHandler"
                                    responses:
                                        type: object
                                        examples:
                                            - http:404: 10
                                        description: An object where the key is the response type and the value is the number of hits with that response.
                                        additionalProperties:
                                            type: integer
                                    errors:
                                        type: object
                                        examples:
                                            - i/o timeout: 1
                                        description: An object where the key is the error type and the value is the number of hits with that error.
                                        additionalProperties:
                                            type: integer
        LoadBalancerTelemetryControllerMetrics:
            title: LoadBalancerTelemetryControllerMetrics
            type: object
            required:
                - disconnects
                - connections
                - requests
                - bytes_transmitted
                - bytes_received
            properties:
                disconnects:
                    title: LoadBalancerTelemetryControllerDisconnectsMetrics
                    type: object
                    required:
                        - no_error
                        - request_invalid
                        - timeout_idle
                        - router_none
                        - router_nomatch
                        - destination_unavailable
                        - unknown_error
                    properties:
                        no_error:
                            type: integer
                        request_invalid:
                            type: integer
                        timeout_idle:
                            type: integer
                        router_none:
                            type: integer
                        router_nomatch:
                            type: integer
                        destination_unavailable:
                            type: integer
                        unknown_error:
                            type: integer
                connections:
                    type: integer
                requests:
                    type: integer
                bytes_transmitted:
                    type: integer
                bytes_received:
                    type: integer
        LoadBalancerTelemetrySnapshot:
            title: LoadBalancerTelemetrySnapshot
            type: object
            required:
                - time
                - started
                - dataset_id
                - current
                - cumulative
            properties:
                time:
                    $ref: "#/components/schemas/DateTime"
                started:
                    $ref: "#/components/schemas/DateTime"
                version:
                    type: string
                dataset_id:
                    type: integer
                current:
                    type: object
                    required:
                        - metrics
                    properties:
                        router:
                            anyOf:
                                - $ref: "#/components/schemas/LoadBalancerTelemetryRouterMetrics"
                                - type: "null"
                        urls:
                            anyOf:
                                - $ref: "#/components/schemas/LoadBalancerTelemetryUrlMetrics"
                                - type: "null"
                        metrics:
                            $ref: "#/components/schemas/LoadBalancerTelemetryControllerMetrics"
                cumulative:
                    type: object
                    required:
                        - metrics
                    properties:
                        router:
                            anyOf:
                                - $ref: "#/components/schemas/LoadBalancerTelemetryRouterMetrics"
                                - type: "null"
                        urls:
                            anyOf:
                                - $ref: "#/components/schemas/LoadBalancerTelemetryUrlMetrics"
                                - type: "null"
                        metrics:
                            $ref: "#/components/schemas/LoadBalancerTelemetryControllerMetrics"
        HubEvents:
            title: HubEvents
            type: object
            description: A collection of timestamps for each event in the hub's lifetime.
            required:
                - created
                - updated
                - deleted
            properties:
                created:
                    description: The timestamp of when the hub was created.
                    $ref: "#/components/schemas/DateTime"
                updated:
                    description: The timestamp of when the hub was updated.
                    $ref: "#/components/schemas/DateTime"
                deleted:
                    description: The timestamp of when the hub was deleted.
                    $ref: "#/components/schemas/DateTime"
                converted:
                    description: The timestamp of when the hub had the first converted.
                    $ref: "#/components/schemas/DateTime"
                first_order:
                    description: The timestamp of when the hub had the first provider added.
                    $ref: "#/components/schemas/DateTime"
                first_provider:
                    description: The timestamp of when the hub had the first provider added.
                    $ref: "#/components/schemas/DateTime"
                first_server:
                    description: The timestamp of when the hub had the first_server deployed.
                    $ref: "#/components/schemas/DateTime"
                first_environment:
                    description: The timestamp of when the hub had the first environment deployed.
                    $ref: "#/components/schemas/DateTime"
                first_image:
                    description: The timestamp of when the hub had the first image deployed.
                    $ref: "#/components/schemas/DateTime"
                first_container:
                    description: The timestamp of when the hub had the first container deployed.
                    $ref: "#/components/schemas/DateTime"
        HubState:
            title: HubState
            allOf:
                - required:
                      - current
                  properties:
                      current:
                          description: The current state of the hub.
                          type: string
                          enum:
                              - new
                              - configuring
                              - live
                              - inactive
                              - deleting
                              - deleted
                - $ref: "#/components/schemas/State"
        MembershipState:
            title: MembershipState
            allOf:
                - required:
                      - current
                  properties:
                      current:
                          description: The current state of the membership.
                          type: string
                          enum:
                              - pending
                              - accepted
                              - declined
                              - revoked
                              - deleted
                - $ref: "#/components/schemas/State"
        Invitation:
            title: HubMembershipInvitation
            type: object
            description: Information about a hub membership invitation.
            required:
                - sender
                - recipient
                - events
            properties:
                sender:
                    type: object
                    description: Information about the origin account of the invitation.
                    required:
                        - id
                        - type
                    properties:
                        id:
                            $ref: "#/components/schemas/ID"
                        type:
                            type: string
                            description: The account type.
                recipient:
                    type: string
                    description: The email address for the invitations recipient.
                events:
                    title: InvitationEvents
                    type: object
                    description: A collection of timestamps for each event in the invitation's lifetime.
                    required:
                        - created
                        - updated
                        - deleted
                        - accepted
                        - declined
                        - revoked
                    properties:
                        created:
                            description: The timestamp of when the invitation was created.
                            $ref: "#/components/schemas/DateTime"
                        updated:
                            description: The timestamp of when the invitation was updated.
                            $ref: "#/components/schemas/DateTime"
                        deleted:
                            description: The timestamp of when the invitation was deleted.
                            $ref: "#/components/schemas/DateTime"
                        accepted:
                            description: The timestamp of when the invitation was accepted.
                            $ref: "#/components/schemas/DateTime"
                        declined:
                            description: The timestamp of when the invitation was declined.
                            $ref: "#/components/schemas/DateTime"
                        revoked:
                            description: The timestamp of when the invitation was revoked.
                            $ref: "#/components/schemas/DateTime"
        HubMembership:
            title: HubMembership
            type: object
            description: A membership resource that is scoped to an individual hub.
            required:
                - id
                - hub_id
                - role_id
                - events
                - state
                - invitation
                - permissions
                - prefereneces
            properties:
                id:
                    $ref: "#/components/schemas/ID"
                account_id:
                    type: string
                    description: An ID for the account associated with the given membership.
                hub_id:
                    $ref: "#/components/schemas/HubID"
                events:
                    title: MembershipEvents
                    type: object
                    description: A collection of timestamps for each event in the membership's lifetime.
                    required:
                        - joined
                    properties:
                        created:
                            description: The timestamp of when the membership was created.
                            $ref: "#/components/schemas/DateTime"
                        updated:
                            description: The timestamp of when the membership was updated.
                            $ref: "#/components/schemas/DateTime"
                        deleted:
                            description: The timestamp of when the membership was deleted.
                            $ref: "#/components/schemas/DateTime"
                        joined:
                            description: The timestamp of when the membership was accepted.
                            $ref: "#/components/schemas/DateTime"
                role_id:
                    definition: The ID of the Role assigned to this Hub Membership.
                    $ref: "#/components/schemas/ID"
                preferences:
                    type: object
                    title: HubMembershipPreferences
                    description: Preference information set by the user for the membership.
                    required:
                        - portal
                        - email
                    properties:
                        portal:
                            type: object
                            required:
                                - notifications
                            properties:
                                notifications:
                                    type: object
                                    required:
                                        - jobs
                                    properties:
                                        jobs:
                                            type: object
                                            required:
                                                - apikey_alerts
                                            properties:
                                                apikey_alerts:
                                                    type: boolean
                        email:
                            type: object
                            required:
                                - notifications
                            properties:
                                notificaitons:
                                    type: object
                                    required:
                                        - server
                                    properties:
                                        server:
                                            type: object
                                            required:
                                                - new
                                                - offline
                                            properties:
                                                new:
                                                    type:
                                                        - boolean
                                                        - "null"
                                                offline:
                                                    type:
                                                        - boolean
                                                        - "null"
                state:
                    $ref: "#/components/schemas/MembershipState"
                invitation:
                    $ref: "#/components/schemas/Invitation"
                cycle:
                    type: object
                    description: If this member is a Cycle employee, their employee ID will be listed here. Cycle employee accounts do not consume a "membership" for a given hub.
                    required:
                        - employee_id
                    properties:
                        employee_id:
                            type: string
                            description: The ID of the employee this membership is associated with.
        HubMeta:
            title: HubsMeta
            type: object
            description: A list of meta fields that can be applied to a hub.
            properties:
                membership:
                    $ref: "#/components/schemas/HubMembership"
        PublicHub:
            title: PublicHub
            description: A hub with sensitive information stripped out.
            type: object
            required:
                - id
                - name
                - events
                - creator
                - state
            properties:
                id:
                    $ref: "#/components/schemas/ID"
                name:
                    type: string
                    description: A name for the hub.
                events:
                    $ref: "#/components/schemas/HubEvents"
                creator:
                    $ref: "#/components/schemas/CreatorScope"
                state:
                    $ref: "#/components/schemas/HubState"
                meta:
                    $ref: "#/components/schemas/HubMeta"
        IntegrationAuth:
            title: IntegrationAuth
            type: object
            properties:
                region:
                    type:
                        - string
                        - "null"
                    description: The region associated with the Integration.
                namespace:
                    type:
                        - string
                        - "null"
                    description: The namespace associated with the Integration.
                api_key:
                    type:
                        - string
                        - "null"
                    description: API key for accessing the Integration.
                key_id:
                    type:
                        - string
                        - "null"
                    description: Key ID for accessing the Integration.
                secret:
                    type:
                        - string
                        - "null"
                    description: Secret for accessing the Integration.
                subscription_id:
                    type:
                        - string
                        - "null"
                    description: Subscription ID for the Integration.
                client_id:
                    type:
                        - string
                        - "null"
                    description: Client ID for the Integration.
                base64_config:
                    type:
                        - string
                        - "null"
                    description: Base64 encoded configuration for the Integration.
        IntegrationState:
            title: IntegrationState
            allOf:
                - required:
                      - current
                  properties:
                      current:
                          description: The current state of the integration.
                          type: string
                          enum:
                              - new
                              - verifying
                              - live
                              - deleting
                              - deleted
                - $ref: "#/components/schemas/State"
        IntegrationAdvancedOptionBoolean:
            title: IntegrationAdvancedOptionBoolean
            type: object
            required:
                - title
                - key
                - type
            properties:
                title:
                    type: string
                key:
                    type: string
                type:
                    type: string
                    enum:
                        - bool
                default:
                    type:
                        - boolean
                        - "null"
        IntegrationAdvancedOptionInt:
            title: IntegrationAdvancedOptionInt
            type: object
            required:
                - title
                - key
                - type
            properties:
                title:
                    type: string
                key:
                    type: string
                type:
                    type: string
                    enum:
                        - int
                default:
                    type:
                        - integer
                        - "null"
        IntegrationAdvancedOptionString:
            title: IntegrationAdvancedOptionString
            type: object
            required:
                - title
                - key
                - type
            properties:
                title:
                    type: string
                key:
                    type: string
                type:
                    type: string
                    enum:
                        - string
                default:
                    type:
                        - string
                        - "null"
        IntegrationDefinition:
            title: IntegrationDefinition
            description: Describes an integration for a Cycle Hub that can be enabled by the Hub owner.
            type: object
            required:
                - vendor
                - name
                - supports_verification
                - supports_multiple
                - required_fields
                - url
                - public
                - usable
                - editable
            properties:
                vendor:
                    type: string
                name:
                    type: string
                supports_verification:
                    type: boolean
                supports_multiple:
                    type: boolean
                features:
                    type:
                        - array
                        - "null"
                    description: A list of additional features supported by this Integration.
                    items:
                        type: string
                extends:
                    type:
                        - array
                        - "null"
                    description: A list of functionality that this integration extends. i.e. ["backups"]
                    items:
                        type: string
                extended_configuration:
                    type:
                        - object
                        - "null"
                    description: Additional configuration options that are available when using this Integration. These describe additional functionality that Cycle may utilize.
                    properties:
                        options:
                            type:
                                - array
                                - "null"
                            items:
                                type: object
                                discriminator:
                                    propertyName: type
                                    mapping:
                                        bool: "#/components/schemas/IntegrationAdvancedOptionBoolean"
                                        int: "#/components/schemas/IntegrationAdvancedOptionInt"
                                        string: "#/components/schemas/IntegrationAdvancedOptionString"
                                oneOf:
                                    - $ref: "#/components/schemas/IntegrationAdvancedOptionBoolean"
                                    - $ref: "#/components/schemas/IntegrationAdvancedOptionInt"
                                    - $ref: "#/components/schemas/IntegrationAdvancedOptionString"
                fields:
                    type: object
                    properties:
                        extra:
                            type:
                                - object
                                - "null"
                            additionalProperties:
                                type: object
                                required:
                                    - description
                                    - required
                                properties:
                                    regex:
                                        type:
                                            - string
                                            - "null"
                                    required:
                                        type: boolean
                                    description:
                                        type: string
                        auth:
                            type:
                                - object
                                - "null"
                            additionalProperties:
                                type: object
                                required:
                                    - description
                                    - required
                                properties:
                                    regex:
                                        type:
                                            - string
                                            - "null"
                                    required:
                                        type: boolean
                                    description:
                                        type: string
                url:
                    type: string
                    format: uri
                public:
                    type: boolean
                usable:
                    type: boolean
                editable:
                    type: boolean
                    description: If true, the Integration can be edited. Otherwise, to make a change it will need to be deleted and recreated.
        IntegrationMeta:
            title: IntegrationMeta
            type: object
            description: Additional fields that can be requested for an Integration on fetch.
            properties:
                definition:
                    $ref: "#/components/schemas/IntegrationDefinition"
                    description: The full Integration definition associated with this Integration.
        Integration:
            title: Integration
            type: object
            required:
                - id
                - identifier
                - name
                - vendor
                - creator
                - hub_id
                - state
                - events
            properties:
                id:
                    $ref: "#/components/schemas/ID"
                name:
                    type: string
                    description: Name of the integration.
                vendor:
                    type: string
                    description: Which vendor this integration is associated with.
                identifier:
                    $ref: "#/components/schemas/Identifier"
                auth:
                    description: Authentication information for the integration, can be null.
                    anyOf:
                        - $ref: "#/components/schemas/IntegrationAuth"
                        - type: "null"
                extra:
                    type:
                        - object
                        - "null"
                    additionalProperties:
                        type: string
                    description: Additional key-value pairs associated with the integration.
                creator:
                    $ref: "#/components/schemas/CreatorScope"
                hub_id:
                    $ref: "#/components/schemas/ID"
                    description: Identifier of the hub associated with the integration.
                state:
                    $ref: "#/components/schemas/IntegrationState"
                events:
                    title: IntegrationEvents
                    type: object
                    description: A collection of timestamps for each event in the integration's lifetime.
                    required:
                        - created
                        - updated
                        - deleted
                    properties:
                        created:
                            description: The timestamp of when the integration was created.
                            $ref: "#/components/schemas/DateTime"
                        updated:
                            description: The timestamp of when the integration was updated.
                            $ref: "#/components/schemas/DateTime"
                        deleted:
                            description: The timestamp of when the integration was deleted.
                            $ref: "#/components/schemas/DateTime"
                meta:
                    anyOf:
                        - $ref: "#/components/schemas/IntegrationMeta"
                        - type: "null"
        ServerSharedFileSystems:
            title: ServerSharedFileSystems
            type: object
            properties:
                mounts:
                    type:
                        - object
                        - "null"
                    additionalProperties:
                        type: object
                        required:
                            - type
                            - options
                            - source
                        properties:
                            type:
                                type: string
                                description: String describing the server mount type.
                            options:
                                type: string
                                description: Comma separated string describing the server mount options.
                                examples:
                                    - key1=value1,key2=value2
                            source:
                                type: string
                                description: String describing the server mount source.
                directories:
                    type:
                        - object
                        - "null"
                    description: An object describing directory identifiers with value {}.
                    additionalProperties: {}
        ServerProvider:
            title: ServerProvider
            type: object
            description: A resource regarding the provider a given server is deployed from.
            required:
                - vendor
                - integration_id
                - model
                - location
                - server
            properties:
                vendor:
                    type: string
                    description: The vendor for the provider this server is deployed from.
                integration_id:
                    $ref: "#/components/schemas/ID"
                model:
                    type: string
                    description: The model of the server that is deployed.
                zone:
                    type:
                        - string
                        - "null"
                    description: The zone of the server that is deployed, if defined.
                location:
                    type: string
                    description: A location where the server is deployed.
                server:
                    type: string
                    description: A provider specific identifier for the server.
                init_ips:
                    description: The IP's assigned to this server during provisioning.
                    type: array
                    items:
                        type: string
                mac_addr:
                    type: string
                    description: The mac address for the server.
                extra:
                    type: object
                    additionalProperties: true
                provision_options:
                    type: object
                    properties:
                        encrypt_storage:
                            type: boolean
                        storage_size:
                            type: number
                        reservation_id:
                            type: string
        ServerFeatures:
            title: ServerFeatures
            type: object
            description: A set of features a given server can have and their information.
            required:
                - sftp
            properties:
                sftp:
                    type: boolean
                    description: A boolean where true means the server accepts incoming SFTP connections through the remote volume integration.
                base_volume_gb:
                    type:
                        - integer
                        - "null"
                    description: The size of the base volume (where Cycle stores container images on this server).
                gateway:
                    type:
                        - object
                        - "null"
                    description: Configuration options for running gateway services on this server.
                    properties:
                        type:
                            type: string
                            description: The type of gateway service that can be run on this server.
                            enum:
                                - bgp
                                - static
                    required:
                        - type
        ServerConstraints:
            title: ServerConstraints
            type: object
            description: Constraints to apply to the server.
            required:
                - tags
                - allow
            properties:
                tags:
                    description: A list of server tags to put on the given server.
                    type: array
                    items:
                        type: string
                allow:
                    type: object
                    description: Settings for the server, things that are or are not allowed.
                    required:
                        - pool
                        - services
                        - overcommit
                    properties:
                        pool:
                            type: boolean
                            description: A boolean where true means - allow containers with no tags specified to be deployed to this server.
                        services:
                            type: boolean
                            description: A boolean where true means - allow service containers to be deployed to this container.
                        overcommit:
                            type: boolean
                            description: A boolean where true means - allow twice the normal amount of CPU shares to be allocated to containers deployed to this server.
        ServerState:
            title: ServerState
            allOf:
                - required:
                      - current
                  properties:
                      current:
                          description: The current state of the server.
                          type: string
                          enum:
                              - new
                              - provisioning
                              - configuring
                              - live
                              - deleting
                              - deleted
                - $ref: "#/components/schemas/State"
        NodeState:
            title: NodeState
            allOf:
                - required:
                      - current
                      - changed
                  properties:
                      current:
                          description: The current state of the node.
                          type: string
                          enum:
                              - new
                              - offline
                              - authorizing
                              - online
                              - decommissioned
                      changed:
                          $ref: "#/components/schemas/DateTime"
                - $ref: "#/components/schemas/State"
        ServerStatsNetwork:
            title: ServerStatsNetwork
            type: object
            description: Statistics about the networks on a given server.
            required:
                - external_ipv4
                - external_ipv6
            properties:
                interfaces:
                    type: object
                    description: Network interfaces for a given server.
                    additionalProperties:
                        type: object
                        description: Network interface.
                        properties:
                            interface:
                                type: string
                                description: The interface name.
                            flags:
                                type: string
                                description: Flags for the given interface.
                            mtu:
                                type: integer
                                description: The maximum transmission unit for the interface.
                            mac_addr:
                                type: string
                                description: The mac address for the interface.
                            addrs:
                                description: An array of IP addresses associated with the interface.
                                type:
                                    - array
                                    - "null"
                                items:
                                    type: string
                external_ipv4:
                    type: string
                    description: The public IPv4 address used to connect to this server.
                external_ipv6:
                    type: string
                    description: The public IPv6 address used to connect to this server.
        ServerStatsUptime:
            title: ServerStatsUptime
            type: object
            description: Statistics describing the uptime of a given server.
            properties:
                seconds:
                    type: number
                    description: The amount in seconds the server has been up (resets on restart).
                cpu_idle:
                    type: number
                    description: CPU idle time.
        ServerStatsCpuUsage:
            title: ServerStatsCpuUsage
            type: object
            properties:
                user:
                    type: integer
                nice:
                    type: integer
                system:
                    type: integer
                idle:
                    type: integer
                iowait:
                    type: integer
                irq:
                    type: integer
                soft_irq:
                    type: integer
                steal:
                    type: integer
                guest:
                    type: integer
                guest_nice:
                    type: integer
        ServerStatsCpu:
            title: ServerStatsCpu
            type: object
            description: Statistics about the CPU resources on a server.
            properties:
                cores:
                    type: integer
                    description: The number of CPU's or vCPU's for a given server.
                processors:
                    description: An array of processor information objects.
                    type: array
                    items:
                        type: object
                        description: Processor information.
                        properties:
                            model:
                                type: string
                                description: The model of the processor.
                            speed:
                                type: number
                                format: float
                                description: The speed of the processor.
                usage:
                    $ref: "#/components/schemas/ServerStatsCpuUsage"
        ServerStatsLoad:
            title: ServerStatsLoad
            type: object
            description: Statistics about the current load on the server.
            required:
                - avg1m
                - avg5m
                - avg15m
            properties:
                avg1m:
                    type: number
                    format: float
                    description: The 1 minute load average.
                avg5m:
                    type: number
                    format: float
                    description: The 5 minute load average.
                avg15m:
                    type: number
                    format: float
                    description: the 15 minute load average.
        ServerStatsRam:
            title: ServerStatsRam
            type: object
            description: Statistics about the RAM on a given server.
            required:
                - available
                - free
                - total
            properties:
                available:
                    type: integer
                    description: The available RAM on the server.
                free:
                    type: integer
                    description: The free RAM on the server.
                total:
                    type: integer
                    description: The total RAM on the server.
        ServerStatsStorage:
            title: ServerStatsStorage
            type: object
            description: Statistics about storage for a given server.
            required:
                - volume_groups
                - mounts
            properties:
                volume_groups:
                    description: An array of volume group objects.
                    type: object
                    additionalProperties:
                        type: object
                        description: Volume group
                        required:
                            - name
                            - size
                            - volumes
                        properties:
                            name:
                                type: string
                                description: A name for the volume group.
                            size:
                                type: integer
                                description: A number representing the aggregate group volume size in megabytes.
                            volumes:
                                description: The actual volumes.
                                type: object
                                additionalProperties:
                                    type: object
                                    required:
                                        - name
                                        - size
                                        - data_percent
                                        - meta_percent
                                        - pool
                                    properties:
                                        name:
                                            type: string
                                            description: The name of the volume.
                                        size:
                                            type: integer
                                            description: The size in megabytes of the volume.
                                        data_percent:
                                            type: integer
                                            description: The percent of the volumes size being used by data.
                                        meta_percent:
                                            type: integer
                                            description: The percent of the volumes size being used by meta data.
                                        pool:
                                            type: string
                                            description: The name of the volume pool this volume is associated with.
                mounts:
                    type: object
                    description: Records that show information about mounted filesystems where the key is the path to the mount.
                    additionalProperties:
                        title: MountedFS
                        type: object
                        description: Mounted filesystem information.
                        required:
                            - type
                            - total
                            - free
                            - used
                        properties:
                            device:
                                type: string
                                description: The device assocaited with the mount.
                            type:
                                type: string
                                description: The type of filesystem in use by the mount.
                            mountpoint:
                                type: string
                                description: The path the mount is associated with.
                            total:
                                type: integer
                                description: The total amount of storage in KB available at this mount.
                            free:
                                type: integer
                                description: The amount of uninitialized storage in KB.
                            used:
                                type: integer
                                description: The amount of storage being used in KB.
        ServerStatsOS:
            title: ServerStatsOS
            type: object
            description: Statistics about the operating system installed on the server (CycleOS).
            properties:
                release:
                    type: string
                    description: The currently installed release version of the OS.
                kernel:
                    type: string
                    description: The currently installed kernel version.
                hostname:
                    type: string
                    description: The hostname as set by the given server's OS.
        ServerStatsVersions:
            title: ServerStatsVersions
            type: object
            description: Information about the versions of Cycle services on a given server.
            required:
                - services
            properties:
                services:
                    description: A list of records about Cycle services.
                    type: object
                    additionalProperties:
                        type: string
        NodeMetaStats:
            title: NodeMetaStats
            type: object
            description: Statistics that pertain to a specific node.
            required:
                - network
                - uptime
                - cpu
                - load
                - ram
                - storage
                - os
                - versions
            properties:
                network:
                    $ref: "#/components/schemas/ServerStatsNetwork"
                uptime:
                    $ref: "#/components/schemas/ServerStatsUptime"
                cpu:
                    $ref: "#/components/schemas/ServerStatsCpu"
                load:
                    $ref: "#/components/schemas/ServerStatsLoad"
                ram:
                    $ref: "#/components/schemas/ServerStatsRam"
                storage:
                    $ref: "#/components/schemas/ServerStatsStorage"
                os:
                    $ref: "#/components/schemas/ServerStatsOS"
                versions:
                    $ref: "#/components/schemas/ServerStatsVersions"
        ServerMeta:
            title: ServerMeta
            type: object
            description: A list of meta fields that can be applied to a server.
            properties:
                node:
                    type: object
                    description: Infrormation about the status of the server.
                    required:
                        - last_checkin
                        - drivers
                        - state
                        - stats
                        - healthy
                        - online
                    properties:
                        last_checkin:
                            description: The last time this server checked in with the platform.
                            $ref: "#/components/schemas/DateTime"
                        drivers:
                            description: An array a drivers associated with the given server.
                            type: array
                            items:
                                type: string
                        state:
                            $ref: "#/components/schemas/NodeState"
                        stats:
                            $ref: "#/components/schemas/NodeMetaStats"
                        healthy:
                            type: boolean
                            description: A boolean where true means the platform is reporting the server as healthy.
                        online:
                            type: boolean
                            description: A boolean where true means the server is online and reachable by the platform.
                instances_count:
                    $ref: "#/components/schemas/StateCountSummary"
                allocations:
                    type: object
                    required:
                        - cpu_shares
                        - ram
                    properties:
                        cpu_shares:
                            type: object
                            required:
                                - total
                                - allocatable
                                - allocated
                            properties:
                                total:
                                    type: integer
                                allocatable:
                                    type: integer
                                allocated:
                                    type: integer
                        ram:
                            type: object
                            required:
                                - total_mb
                                - allocatable_mb
                                - allocated_mb
                            properties:
                                total_mb:
                                    type: integer
                                allocatable_mb:
                                    type: integer
                                allocated_mb:
                                    type: integer
        Server:
            title: Server
            x-ogen-name: InfraServer
            type: object
            description: The server resource, referring to servers that have been deployed to a Cycle hub.
            required:
                - id
                - hub_id
                - location_id
                - model_id
                - node_id
                - shared_file_systems
                - hostname
                - creator
                - provider
                - cluster
                - features
                - constraints
                - ephemeral
                - state
                - events
            properties:
                id:
                    $ref: "#/components/schemas/ID"
                hub_id:
                    $ref: "#/components/schemas/HubID"
                location_id:
                    type: string
                    description: An identifier for the location this server is deployed to.
                model_id:
                    type: string
                    description: An identifier for the model of server that is deployed.
                node_id:
                    type: string
                    description: An identifier for the node.
                shared_file_systems:
                    $ref: "#/components/schemas/ServerSharedFileSystems"
                hostname:
                    type: string
                    description: The server hostname.
                creator:
                    $ref: "#/components/schemas/CreatorScope"
                provider:
                    $ref: "#/components/schemas/ServerProvider"
                cluster:
                    type: string
                    description: The cluster the given server is deployed to.
                features:
                    $ref: "#/components/schemas/ServerFeatures"
                constraints:
                    $ref: "#/components/schemas/ServerConstraints"
                autoscale:
                    type:
                        - object
                        - "null"
                    required:
                        - group_id
                    properties:
                        group_id:
                            $ref: "#/components/schemas/ID"
                ephemeral:
                    type: boolean
                    description: Set to true when a server is created as part of an auto-scale event.
                evacuate:
                    type:
                        - object
                        - "null"
                    description: Details about a server's evacuation status. When an evacuation is in progress, no new container instances will be permitted on the server.
                    required:
                        - started
                    properties:
                        started:
                            description: The time when this server began evacuating instances.
                            $ref: "#/components/schemas/DateTime"
                state:
                    $ref: "#/components/schemas/ServerState"
                events:
                    title: ServerEvents
                    type: object
                    description: A collection of timestamps for each event in the server's lifetime.
                    required:
                        - created
                        - updated
                        - deleted
                        - latest_instance
                        - provisioning
                    properties:
                        created:
                            description: The timestamp of when the server was created.
                            $ref: "#/components/schemas/DateTime"
                        updated:
                            description: The timestamp of when the server was updated.
                            $ref: "#/components/schemas/DateTime"
                        deleted:
                            description: The timestamp of when the server was deleted.
                            $ref: "#/components/schemas/DateTime"
                        latest_instance:
                            description: The timestamp of when the latest instance was deployed to this server.
                            $ref: "#/components/schemas/DateTime"
                        provisioning:
                            type: object
                            description: Information about the provisioning of the server.
                            required:
                                - started
                                - failed
                                - completed
                            properties:
                                started:
                                    description: A timestamp of when the server started provisioning.
                                    $ref: "#/components/schemas/DateTime"
                                failed:
                                    description: A timestamp of when the server failed provisioning.
                                    $ref: "#/components/schemas/DateTime"
                                completed:
                                    description: A timestamp of when the server completed provisioning.
                                    $ref: "#/components/schemas/DateTime"
                meta:
                    $ref: "#/components/schemas/ServerMeta"
        CPUSnapshot:
            title: InstanceTelemetryCPUSnapshot
            type: object
            description: A telemetry snapshot pertaining to CPU usage.
            required:
                - num_cores
                - usage
                - throttling
            properties:
                num_cores:
                    type: integer
                    description: The total number of cores on the originating node the instance is running on.
                usage:
                    type: object
                    description: Usage statistics.
                    required:
                        - total
                        - kernel
                        - user
                    properties:
                        total:
                            type: integer
                            description: Total amount of VPU time since last restart.
                        kernel:
                            type: integer
                            description: The amount of time in nanoseconds used by the kernel since last restart.
                        user:
                            type: number
                            description: The amount of time in nanoseconds taken up for user processes.
                throttling:
                    type: object
                    description: Throttling statistics.
                    properties:
                        periods:
                            type: integer
                            description: The amount of periods that have passed since the last restart.
                        throttled_periods:
                            type: integer
                            description: How many times the instance has been throttled for using all its alloted CPU during a period.
                        throttled_time:
                            type: integer
                            description: The amount of time in nanoseconds this instnace has spent with throttled CPU resources.
        MemoryData:
            title: MemoryData
            type: object
            properties:
                usage:
                    type: number
                    description: The number in bytes of memory being used by the instance at the time of the snapshot.
                max_usage:
                    type: number
                    description: The highest amoun tof memory usage since the last restart.
                fail_count:
                    type: number
                    description: The number of times the memory liimit was exceeded for the instance.
                limit:
                    type: number
                    description: The maximum number of bytes of memory this instance has acess to.
        MemorySnapshot:
            title: InstanceTelemetryMemorySnapshot
            type: object
            description: A snapshot of memory usage statistics.
            properties:
                cache:
                    type: number
                    description: The number of bytes of page cache memory being used by this instance.
                usage:
                    description: The memory usage data.
                    $ref: "#/components/schemas/MemoryData"
                swap_usage:
                    description: Memory swap usage data.
                    $ref: "#/components/schemas/MemoryData"
                kernel_usage:
                    description: Kernal memory usage.
                    $ref: "#/components/schemas/MemoryData"
                kernel_tcp_usage:
                    description: Kernel TCP buffer usage.
                    $ref: "#/components/schemas/MemoryData"
        ProcessesSnapshot:
            title: InstanceTelemetryProcessesSnapshot
            type: object
            description: Process information for a given snapshot.
            properties:
                current:
                    type: number
                    description: The current number of running processes in the instance.
                limit:
                    type: number
                    description: The maximum number of running processes for the instance.
        NetworkSnapshot:
            title: InstanceTelemetryNetworkSnapshot
            type: object
            description: A snapshot of network usage statistics.
            required:
                - interfaces
            properties:
                interfaces:
                    type: array
                    description: An array of network interfaces attached to this instance.
                    items:
                        type: object
                        title: InstanceTelemetryNetworkInterfaceSnapshot
                        required:
                            - name
                            - rx_bytes
                            - tx_bytes
                        properties:
                            name:
                                type: string
                            rx_bytes:
                                type: integer
                            tx_bytes:
                                type: integer
        HugeTLB:
            title: HugeTLB
            type: object
            description: HugeTLB data.
            properties:
                usage:
                    type: integer
                    description: The number of bytes being consumed by huge pages of all sizes.
                max:
                    type: integer
                    description: The maximum number of bytes allowed to be used for huge pages for this instance.
                fail_count:
                    type: integer
                    description: The number of times the hugeTLB memory limit has been exceeded by this instance.
        ResourceSnapshot:
            title: InstanceTelemetryResourceSnapshot
            description: A resource snapshot that shows instance telemetry.
            type: object
            required:
                - time
                - cpu
                - memory
                - processes
                - network
            properties:
                time:
                    description: A timestamp of the time this snapshot was captured at.
                    $ref: "#/components/schemas/DateTime"
                hub_id:
                    anyOf:
                        - $ref: "#/components/schemas/HubID"
                        - type: "null"
                container_id:
                    anyOf:
                        - $ref: "#/components/schemas/ID"
                        - type: "null"
                instance_id:
                    anyOf:
                        - $ref: "#/components/schemas/ID"
                        - type: "null"
                environment_id:
                    anyOf:
                        - $ref: "#/components/schemas/ID"
                        - type: "null"
                server_id:
                    anyOf:
                        - $ref: "#/components/schemas/ID"
                        - type: "null"
                cluster:
                    anyOf:
                        - $ref: "#/components/schemas/Identifier"
                        - type: "null"
                cpu:
                    $ref: "#/components/schemas/CPUSnapshot"
                memory:
                    $ref: "#/components/schemas/MemorySnapshot"
                processes:
                    $ref: "#/components/schemas/ProcessesSnapshot"
                network:
                    $ref: "#/components/schemas/NetworkSnapshot"
                hugetlb:
                    $ref: "#/components/schemas/HugeTLB"
        Certificate:
            title: Certificate
            description: A DNS TLS certificate.
            type: object
            required:
                - id
                - domains
                - private_key
                - bundle
                - hub_id
            properties:
                id:
                    $ref: "#/components/schemas/ID"
                domains:
                    type: array
                    description: An array of domains associated with the certificate.
                    items:
                        type: string
                private_key:
                    type: string
                    description: The certificates private key.
                bundle:
                    type: string
                    description: A bundle of certificates that are used to verify authenticity.
                hub_id:
                    $ref: "#/components/schemas/HubID"
        FunctionRuntimeVariables:
            title: FunctionRuntimeVariables
            description: Variables that affect the runtime of a function container.
            type: object
            properties:
                environment_variables:
                    description: Environment variables to inject into the container.
                    type:
                        - object
                        - "null"
                    additionalProperties:
                        type: string
        FunctionInitOpts:
            title: FunctionInitOpts
            description: Initialization options used when starting a function instance.
            type: object
            required:
                - token
                - runtime_variables
            properties:
                token:
                    type: string
                    description: A custom token used for identifying and managing a claim. Can be any valid string.
                runtime_variables:
                    $ref: "#/components/schemas/FunctionRuntimeVariables"
        StartInstanceTask:
            title: StartInstanceTask
            description: Properties for creating a job to start an instance.
            type: object
            required:
                - action
                - contents
            properties:
                action:
                    type: string
                    enum:
                        - container.instance.start
                contents:
                    type: object
                    required:
                        - instance_id
                        - container_id
                    properties:
                        instance_id:
                            $ref: "#/components/schemas/ID"
                        container_id:
                            $ref: "#/components/schemas/ID"
                        function:
                            anyOf:
                                - $ref: "#/components/schemas/FunctionInitOpts"
                                - type: "null"
        StopInstanceTask:
            title: StopInstanceTask
            description: Properties for creating a job to stop an instance.
            type: object
            required:
                - action
                - contents
            properties:
                action:
                    type: string
                    enum:
                        - container.instance.stop
                contents:
                    type: object
                    required:
                        - instance_id
                        - container_id
                    properties:
                        instance_id:
                            $ref: "#/components/schemas/ID"
                        container_id:
                            $ref: "#/components/schemas/ID"
        Metric:
            title: Metric
            description: A data point submitted to the monitoring system.
            type: object
            required:
                - metric
                - type
            properties:
                metric:
                    type: string
                    description: The title of the metric this data point refers to.
                type:
                    type: string
                    description: The type of metric
                    enum:
                        - gauge
                        - count
                        - counter
                        - rate
                        - histogram
                        - distribution
                        - set
                labels:
                    type: object
                    description: Any associated labels for the data, which can be used in querying.
                    additionalProperties:
                        type: string
                tags:
                    type: array
                    description: Additional tags for the data point.
                    items:
                        type: string
                points:
                    type: array
                    items:
                        type: object
                        required:
                            - time
                        properties:
                            time:
                                $ref: "#/components/schemas/DateTime"
                            values:
                                type: array
                                items:
                                    type: integer
        NetworkState:
            title: NetworkState
            allOf:
                - required:
                      - current
                  properties:
                      current:
                          description: The current state of the network.
                          type: string
                          enum:
                              - live
                              - deleting
                              - deleted
                - $ref: "#/components/schemas/State"
        NetworkPrivacySettings:
            title: NetworkPrivacySettings
            type: object
            description: Private network information for a Cycle SDN.
            required:
                - vxlan_tag
                - subnet
                - mac_addr_suffix
                - ipv6
            properties:
                vxlan_tag:
                    type: integer
                    description: A tag used to ensure proper routing.
                subnet:
                    type: string
                    description: The subnet of the private network.
                mac_addr_suffix:
                    type: integer
                    description: A number used to ensure a MAC address exists for each network.
                ipv6:
                    type: object
                    description: IPv6 infromation for the network.
                    required:
                        - ip
                        - cidr
                    properties:
                        ip:
                            type: string
                            description: The networks IPv6 base.
                        cidr:
                            type: string
                            description: The private network CIDR.
        Network:
            title: Network
            type: object
            description: SDN Network resource.
            required:
                - id
                - name
                - identifier
                - cluster
                - creator
                - hub_id
                - state
                - events
            properties:
                id:
                    $ref: "#/components/schemas/ID"
                name:
                    type: string
                    description: The name of the network.
                identifier:
                    type: string
                    description: A network identifier used to construct http calls that specifically use this network over another.
                cluster:
                    type: string
                    description: The infrastructure cluster the environments belonging to this network belong to.
                creator:
                    $ref: "#/components/schemas/CreatorScope"
                hub_id:
                    $ref: "#/components/schemas/HubID"
                state:
                    $ref: "#/components/schemas/NetworkState"
                private_network:
                    anyOf:
                        - $ref: "#/components/schemas/NetworkPrivacySettings"
                        - type: "null"
                environments:
                    description: An array of environments and timestamps.
                    type:
                        - array
                        - "null"
                    items:
                        type: object
                        required:
                            - id
                            - added
                        properties:
                            id:
                                $ref: "#/components/schemas/ID"
                            added:
                                description: A timestamp of when the environment was added.
                                $ref: "#/components/schemas/DateTime"
                acl:
                    anyOf:
                        - $ref: "#/components/schemas/ACL"
                        - type: "null"
                events:
                    title: NetworkEvents
                    type: object
                    description: A collection of timestamps for each event in the network's lifetime.
                    required:
                        - created
                        - updated
                        - deleted
                    properties:
                        created:
                            description: The timestamp of when the image was created.
                            $ref: "#/components/schemas/DateTime"
                        updated:
                            description: The timestamp of when the image was updated.
                            $ref: "#/components/schemas/DateTime"
                        deleted:
                            description: The timestamp of when the image was deleted.
                            $ref: "#/components/schemas/DateTime"
    responses:
        DefaultError:
            description: General error response from the platform
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/ErrorEnvelope"
